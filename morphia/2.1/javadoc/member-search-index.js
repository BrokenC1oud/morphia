memberSearchIndex = [{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"abortTransaction()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"abs(Expression)","url":"abs(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"AbstractCriteria","l":"AbstractCriteria()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"AbstractEntityInterceptor","l":"AbstractEntityInterceptor()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"AbstractQueryFactory","l":"AbstractQueryFactory()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"accessor()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"accessor(PropertyAccessor<? super Object>)","url":"accessor(org.bson.codecs.pojo.PropertyAccessor)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Accumulator","l":"Accumulator(String, List<Expression>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"accumulator(String, Object)","url":"accumulator(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"Accumulator(String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"accumulator(String, String, List<Expression>, String)","url":"accumulator(java.lang.String,java.lang.String,java.util.List,java.lang.String)"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"accumulator(String, String)","url":"accumulator(java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"Accumulator(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"AccumulatorExpression","l":"AccumulatorExpression(String, String, List<Expression>, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.List,java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"acos(Expression)","url":"acos(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"acosh(Expression)","url":"acosh(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"Validation","l":"action()"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"action()"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"action(ValidationAction)","url":"action(com.mongodb.client.model.ValidationAction)"},{"p":"dev.morphia.query","c":"CriteriaContainer","l":"add(Criteria...)","url":"add(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"add(Criteria...)","url":"add(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"add(Criteria...)","url":"add(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"add(Expression, Expression...)","url":"add(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ObjectExpressions.MergeObjects","l":"add(Expression)","url":"add(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"add(Object...)","url":"add(java.lang.Object...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"add(String, Expression)","url":"add(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"add(String)","url":"add(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateBase","l":"add(UpdateOperator)","url":"add(dev.morphia.query.experimental.updates.UpdateOperator)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaTypesCodecProvider","l":"addCodec(Codec<T>)","url":"addCodec(org.bson.codecs.Codec)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"addConvention(MorphiaConvention)","url":"addConvention(dev.morphia.mapping.MorphiaConvention)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"addCriteria(FilterOperator, Object, boolean)","url":"addCriteria(dev.morphia.query.FilterOperator,java.lang.Object,boolean)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"addCriteria(FilterOperator, Object)","url":"addCriteria(dev.morphia.query.FilterOperator,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AddFields","l":"AddFields()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"addFields(AddFields)","url":"addFields(dev.morphia.aggregation.experimental.stages.AddFields)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"addFields(AddFields)","url":"addFields(dev.morphia.aggregation.experimental.stages.AddFields)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"AddFieldsCodec","l":"AddFieldsCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"addGeoCriteria(FilterOperator, Object, Map<String, Object>)","url":"addGeoCriteria(dev.morphia.query.FilterOperator,java.lang.Object,java.util.Map)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"addInterceptor(EntityInterceptor)","url":"addInterceptor(dev.morphia.EntityInterceptor)"},{"p":"dev.morphia.mapping","c":"DiscriminatorLookup","l":"addModel(EntityModel)","url":"addModel(dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"addModel(FieldModelBuilder)","url":"addModel(dev.morphia.mapping.codec.pojo.FieldModelBuilder)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"addToSet(Expression)","url":"addToSet(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"addToSet(String, Iterable<?>)","url":"addToSet(java.lang.String,java.lang.Iterable)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"addToSet(String, Iterable<?>)","url":"addToSet(java.lang.String,java.lang.Iterable)"},{"p":"dev.morphia.query","c":"Updates","l":"addToSet(String, Iterable<?>)","url":"addToSet(java.lang.String,java.lang.Iterable)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"addToSet(String, List<?>)","url":"addToSet(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"addToSet(String, List<?>)","url":"addToSet(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"Updates","l":"addToSet(String, List<?>)","url":"addToSet(java.lang.String,java.util.List)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"addToSet(String, List<?>)","url":"addToSet(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"addToSet(String, Object)","url":"addToSet(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"addToSet(String, Object)","url":"addToSet(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"addToSet(String, Object)","url":"addToSet(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"addToSet(String, Object)","url":"addToSet(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation","c":"Group","l":"addToSet(String)","url":"addToSet(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.OutputOperation","l":"addToSet(String)","url":"addToSet(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketOptions.OutputOperation","l":"addToSet(String)","url":"addToSet(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"AddToSetOperator","l":"AddToSetOperator(String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData.Builder","l":"addTypeParameter(TypeData<S>)","url":"addTypeParameter(dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData.Builder","l":"addTypeParameter(TypeData<S>)","url":"addTypeParameter(dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"advanceClusterTime(BsonDocument)","url":"advanceClusterTime(org.bson.BsonDocument)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"advanceOperationTime(BsonTimestamp)","url":"advanceOperationTime(org.bson.BsonTimestamp)"},{"p":"dev.morphia","c":"Datastore","l":"aggregate(Class<T>)","url":"aggregate(java.lang.Class)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"aggregate(Class<T>)","url":"aggregate(java.lang.Class)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"aggregate(Class<U>, AggregationOptions, ReadPreference)","url":"aggregate(java.lang.Class,com.mongodb.AggregationOptions,com.mongodb.ReadPreference)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"aggregate(Class<U>, AggregationOptions, ReadPreference)","url":"aggregate(java.lang.Class,com.mongodb.AggregationOptions,com.mongodb.ReadPreference)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"aggregate(Class<U>, AggregationOptions)","url":"aggregate(java.lang.Class,com.mongodb.AggregationOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"aggregate(Class<U>, AggregationOptions)","url":"aggregate(java.lang.Class,com.mongodb.AggregationOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"aggregate(Class<U>)","url":"aggregate(java.lang.Class)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"aggregate(Class<U>)","url":"aggregate(java.lang.Class)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"aggregate(String, Class<U>, AggregationOptions, ReadPreference)","url":"aggregate(java.lang.String,java.lang.Class,com.mongodb.AggregationOptions,com.mongodb.ReadPreference)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"aggregate(String, Class<U>, AggregationOptions, ReadPreference)","url":"aggregate(java.lang.String,java.lang.Class,com.mongodb.AggregationOptions,com.mongodb.ReadPreference)"},{"p":"dev.morphia","c":"Datastore","l":"aggregate(String)","url":"aggregate(java.lang.String)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"aggregate(String)","url":"aggregate(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"AggregationCodecProvider","l":"AggregationCodecProvider(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationException","l":"AggregationException(String, Exception)","url":"%3Cinit%3E(java.lang.String,java.lang.Exception)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationException","l":"AggregationException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"AggregationImpl(Datastore, MongoCollection<T>)","url":"%3Cinit%3E(dev.morphia.Datastore,com.mongodb.client.MongoCollection)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"AggregationOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"AggregationPipelineImpl(Datastore, MongoCollection, Class)","url":"%3Cinit%3E(dev.morphia.Datastore,com.mongodb.client.MongoCollection,java.lang.Class)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"ALL"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"all(String, Object)","url":"all(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"allElementsTrue(Expression, Expression...)","url":"allElementsTrue(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"allowDiskUse()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"allowDiskUse(boolean)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"allUsers(boolean)"},{"p":"dev.morphia.annotations","c":"Collation","l":"alternate()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"alternate()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"alternateName(String)","url":"alternateName(java.lang.String)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"alternateNames()"},{"p":"dev.morphia.query","c":"CriteriaJoin","l":"AND"},{"p":"dev.morphia.query","c":"CriteriaContainer","l":"and(Criteria...)","url":"and(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"and(Criteria...)","url":"and(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"and(Criteria...)","url":"and(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"Query","l":"and(Criteria...)","url":"and(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"BooleanExpressions","l":"and(Expression, Expression...)","url":"and(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"and(Filter...)","url":"and(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"and(String, int)","url":"and(java.lang.String,int)"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"AnnotationBuilder()","url":"%3Cinit%3E()"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"AnnotationBuilder(T)","url":"%3Cinit%3E(T)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"annotations()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"annotations()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"annotations(List<Annotation>)","url":"annotations(java.util.List)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"annotationsMap()"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"annotationType()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"annotationType()"},{"p":"dev.morphia.annotations","c":"TextBuilder","l":"annotationType()"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"annotationType()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"annotationType()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"anyElementTrue(Expression, Expression...)","url":"anyElementTrue(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.mapping","c":"MorphiaConvention","l":"apply(Datastore, EntityModelBuilder)","url":"apply(dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModelBuilder)"},{"p":"dev.morphia.mapping","c":"MorphiaDefaultsConvention","l":"apply(Datastore, EntityModelBuilder)","url":"apply(dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModelBuilder)"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"apply(EntityModelBuilder)","url":"apply(dev.morphia.mapping.codec.pojo.EntityModelBuilder)"},{"p":"dev.morphia.query","c":"FindOptions","l":"apply(FindIterable<T>, Mapper, Class<?>)","url":"apply(com.mongodb.client.FindIterable,dev.morphia.mapping.Mapper,java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"apply(List<Document>, MongoCollection<T>, Class<S>)","url":"apply(java.util.List,com.mongodb.client.MongoCollection,java.lang.Class)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"apply(String, Object)","url":"apply(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"apply(String)","url":"apply(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"NearFilter","l":"applyOpts(Map)","url":"applyOpts(java.util.Map)"},{"p":"dev.morphia.query","c":"Type","l":"ARRAY"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"array(BsonWriter, Runnable)","url":"array(org.bson.BsonWriter,java.lang.Runnable)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"array(BsonWriter, String, Runnable)","url":"array(org.bson.BsonWriter,java.lang.String,java.lang.Runnable)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"array(Expression...)","url":"array(dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayExpression","l":"ArrayExpression(String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.mapping.codec","c":"ArrayFieldAccessor","l":"ArrayFieldAccessor(TypeData, Field)","url":"%3Cinit%3E(dev.morphia.mapping.codec.pojo.TypeData,java.lang.reflect.Field)"},{"p":"dev.morphia","c":"UpdateOptions","l":"arrayFilter(Filter)","url":"arrayFilter(dev.morphia.query.experimental.filters.Filter)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayFilterExpression","l":"ArrayFilterExpression(Expression, Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia","c":"ModifyOptions","l":"arrayFilters(List<? extends Bson>)","url":"arrayFilters(java.util.List)"},{"p":"dev.morphia","c":"UpdateOptions","l":"arrayFilters(List<? extends Bson>)","url":"arrayFilters(java.util.List)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayIndexExpression","l":"ArrayIndexExpression(Expression, Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayLiteral","l":"ArrayLiteral(Expression...)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.query","c":"ArraySlice","l":"ArraySlice(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"dev.morphia.query","c":"ArraySlice","l":"ArraySlice(int)","url":"%3Cinit%3E(int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"arrayToObject(Expression)","url":"arrayToObject(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayFilterExpression","l":"as(String)","url":"as(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MapExpression","l":"as(String)","url":"as(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"as(String)","url":"as(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"as(String)","url":"as(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.Direction","l":"ASCENDING"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort","l":"ascending(String, String...)","url":"ascending(java.lang.String,java.lang.String...)"},{"p":"dev.morphia.query","c":"Sort","l":"ascending(String)","url":"ascending(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"asin(Expression)","url":"asin(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"asinh(Expression)","url":"asinh(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.lazy","c":"LazyFeatureDependencies","l":"assertProxyClassesPresent()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"atan(Expression)","url":"atan(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"atan2(Expression, Expression)","url":"atan2(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"atanh(Expression)","url":"atanh(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"AbstractCriteria","l":"attach(CriteriaContainer)","url":"attach(dev.morphia.query.CriteriaContainer)"},{"p":"dev.morphia.query","c":"Criteria","l":"attach(CriteriaContainer)","url":"attach(dev.morphia.query.CriteriaContainer)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"attach(CriteriaContainer)","url":"attach(dev.morphia.query.CriteriaContainer)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"AutoBucket()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"autoBucket(AutoBucket)","url":"autoBucket(dev.morphia.aggregation.experimental.stages.AutoBucket)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"autoBucket(AutoBucket)","url":"autoBucket(dev.morphia.aggregation.experimental.stages.AutoBucket)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"AutoBucketCodec","l":"AutoBucketCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation","c":"Group","l":"average(String)","url":"average(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.OutputOperation","l":"average(String)","url":"average(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketOptions.OutputOperation","l":"average(String)","url":"average(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"avg(Expression, Expression...)","url":"avg(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"background()"},{"p":"dev.morphia.annotations","c":"Collation","l":"backwards()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"backwards()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"batchSize()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"batchSize(int)"},{"p":"dev.morphia.query","c":"FindOptions","l":"batchSize(int)"},{"p":"dev.morphia.query","c":"Type","l":"BINARY_DATA"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DataSizeExpressions","l":"binarySize(Expression)","url":"binarySize(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"bitsAllClear(String, int)","url":"bitsAllClear(java.lang.String,int)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"bitsAllClear(String, int[])","url":"bitsAllClear(java.lang.String,int[])"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"bitsAllSet(String, int)","url":"bitsAllSet(java.lang.String,int)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"bitsAllSet(String, int[])","url":"bitsAllSet(java.lang.String,int[])"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"bitsAnyClear(String, Object)","url":"bitsAnyClear(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"bitsAnySet(String, Object)","url":"bitsAnySet(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"BOOLEAN"},{"p":"dev.morphia.query","c":"Type","l":"BOOLEAN"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"boundaries(Expression...)","url":"boundaries(dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.query","c":"Shape","l":"box(Point, Point)","url":"box(com.mongodb.client.model.geojson.Point,com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"box(String, Point, Point)","url":"box(java.lang.String,com.mongodb.client.model.geojson.Point,com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SwitchExpression","l":"branch(Expression, Expression)","url":"branch(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DataSizeExpressions","l":"bsonSize(Expression)","url":"bsonSize(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.codec","c":"BsonTypeMap","l":"BsonTypeMap()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"Bucket()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"bucket(Bucket)","url":"bucket(dev.morphia.aggregation.experimental.stages.Bucket)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"bucket(Bucket)","url":"bucket(dev.morphia.aggregation.experimental.stages.Bucket)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"bucket(String, List<?>, BucketOptions)","url":"bucket(java.lang.String,java.util.List,dev.morphia.query.BucketOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"bucket(String, List<?>, BucketOptions)","url":"bucket(java.lang.String,java.util.List,dev.morphia.query.BucketOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"bucket(String, List<?>)","url":"bucket(java.lang.String,java.util.List)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"bucket(String, List<?>)","url":"bucket(java.lang.String,java.util.List)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"bucketAuto(String, int, BucketAutoOptions)","url":"bucketAuto(java.lang.String,int,dev.morphia.query.BucketAutoOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"bucketAuto(String, int, BucketAutoOptions)","url":"bucketAuto(java.lang.String,int,dev.morphia.query.BucketAutoOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"bucketAuto(String, int)","url":"bucketAuto(java.lang.String,int)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"bucketAuto(String, int)","url":"bucketAuto(java.lang.String,int)"},{"p":"dev.morphia.query","c":"BucketAutoOptions","l":"BucketAutoOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"BucketCodec","l":"BucketCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"BucketOptions","l":"BucketOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"buckets(Integer)","url":"buckets(java.lang.Integer)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"build()"},{"p":"dev.morphia.geo","c":"PointBuilder","l":"build()"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"build()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"build()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"build()"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData.Builder","l":"build()"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData.Builder","l":"build()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"builder()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"builder()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"builder()"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData","l":"builder(boolean)"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData.Builder","l":"Builder(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"builder(Class<T>)","url":"builder(java.lang.Class)"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"builder(MapperOptions)","url":"builder(dev.morphia.mapping.MapperOptions)"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"builder(String)","url":"builder(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"bypassDocumentValidation()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"bypassDocumentValidation(boolean)"},{"p":"dev.morphia","c":"InsertManyOptions","l":"bypassDocumentValidation(Boolean)","url":"bypassDocumentValidation(java.lang.Boolean)"},{"p":"dev.morphia","c":"InsertOneOptions","l":"bypassDocumentValidation(Boolean)","url":"bypassDocumentValidation(java.lang.Boolean)"},{"p":"dev.morphia","c":"InsertOptions","l":"bypassDocumentValidation(Boolean)","url":"bypassDocumentValidation(java.lang.Boolean)"},{"p":"dev.morphia","c":"ModifyOptions","l":"bypassDocumentValidation(Boolean)","url":"bypassDocumentValidation(java.lang.Boolean)"},{"p":"dev.morphia","c":"UpdateOptions","l":"bypassDocumentValidation(Boolean)","url":"bypassDocumentValidation(java.lang.Boolean)"},{"p":"dev.morphia.mapping.codec","c":"ByteWrapperArrayCodec","l":"ByteWrapperArrayCodec()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"cacheClassLookups(boolean)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"callLifecycleMethods(Class<? extends Annotation>, Object, Document, Mapper)","url":"callLifecycleMethods(java.lang.Class,java.lang.Object,org.bson.Document,dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"camelCase()"},{"p":"dev.morphia.annotations","c":"Entity","l":"cap()"},{"p":"dev.morphia.annotations","c":"Collation","l":"caseFirst()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"caseFirst()"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"caseInsensitive()"},{"p":"dev.morphia.annotations","c":"Collation","l":"caseLevel()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"caseLevel()"},{"p":"dev.morphia.query.experimental.filters","c":"TextSearchFilter","l":"caseSensitive(Boolean)","url":"caseSensitive(java.lang.Boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"ceil(Expression)","url":"ceil(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"Shape","l":"center(Point, double)","url":"center(com.mongodb.client.model.geojson.Point,double)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"center(String, Point, double)","url":"center(java.lang.String,com.mongodb.client.model.geojson.Point,double)"},{"p":"dev.morphia.query","c":"Shape","l":"centerSphere(Point, double)","url":"centerSphere(com.mongodb.client.model.geojson.Point,double)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"centerSphere(String, Point, double)","url":"centerSphere(java.lang.String,com.mongodb.client.model.geojson.Point,double)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"TrimExpression","l":"chars(Expression)","url":"chars(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"ContradictingFieldAnnotation","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"FieldConstraint","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"IdDoesNotMix","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"LazyReferenceMissingDependencies","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"LazyReferenceOnArray","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"MapKeyTypeConstraint","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"ReferenceToUnidentifiable","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"VersionMisuse","l":"check(Mapper, EntityModel, FieldModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation","c":"ClassConstraint","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation","c":"ConstructorParameterNameConstraint","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"DuplicatedAttributeNames","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EmbeddedAndId","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EmbeddedAndValue","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EntityAndEmbed","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EntityCannotBeMapOrIterable","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EntityOrEmbed","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"MultipleId","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"MultipleVersions","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.classrules","c":"NoId","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"FieldConstraint","l":"check(Mapper, EntityModel, Set<ConstraintViolation>)","url":"check(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel,java.util.Set)"},{"p":"dev.morphia.mapping.codec","c":"ClassCodec","l":"ClassCodec()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"classLoader(ClassLoader)","url":"classLoader(java.lang.ClassLoader)"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"className()"},{"p":"dev.morphia","c":"DeleteOptions","l":"clientSession()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"clientSession()"},{"p":"dev.morphia","c":"InsertOneOptions","l":"clientSession()"},{"p":"dev.morphia","c":"ModifyOptions","l":"clientSession()"},{"p":"dev.morphia","c":"UpdateOptions","l":"clientSession()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"clientSession()"},{"p":"dev.morphia.query","c":"CountOptions","l":"clientSession()"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"clientSession()"},{"p":"dev.morphia.query","c":"FindOptions","l":"clientSession()"},{"p":"dev.morphia","c":"DeleteOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia","c":"InsertManyOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia","c":"InsertOneOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia","c":"ModifyOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia","c":"UpdateOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia.query","c":"CountOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia.query","c":"FindOptions","l":"clientSession(ClientSession)","url":"clientSession(com.mongodb.client.ClientSession)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"close()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"close()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"CLUSTER_TIME"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"cmp(Expression, Expression)","url":"cmp(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"codec()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"codec(Codec<? super Object>)","url":"codec(org.bson.codecs.Codec)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"collation()"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"collation()"},{"p":"dev.morphia","c":"DeleteOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia","c":"ModifyOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia","c":"UpdateOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia.query","c":"CountOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia.query","c":"FindOptions","l":"collation(Collation)","url":"collation(com.mongodb.client.model.Collation)"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"CollationBuilder()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec","c":"CollectionCodec","l":"CollectionCodec(Class<Collection<T>>, Codec<T>)","url":"%3Cinit%3E(java.lang.Class,org.bson.codecs.Codec)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"collectionNaming(NamingStrategy)","url":"collectionNaming(dev.morphia.mapping.NamingStrategy)"},{"p":"dev.morphia.mapping.experimental","c":"CollectionReference","l":"CollectionReference()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"CollectionStats()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CollectionStatsCodec","l":"CollectionStatsCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"collStats(CollectionStats)","url":"collStats(dev.morphia.aggregation.experimental.stages.CollectionStats)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"collStats(CollectionStats)","url":"collStats(dev.morphia.aggregation.experimental.stages.CollectionStats)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"comment(String, Object)","url":"comment(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"FindOptions","l":"comment(String)","url":"comment(java.lang.String)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"commitTransaction()"},{"p":"dev.morphia","c":"Key","l":"compareTo(Key<T>)","url":"compareTo(dev.morphia.Key)"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"compute(EntityModelBuilder)","url":"compute(dev.morphia.mapping.codec.pojo.EntityModelBuilder)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"concat(Expression, Expression...)","url":"concat(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"concatArrays(Expression, Expression)","url":"concatArrays(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"Entity","l":"concern()"},{"p":"dev.morphia.annotations","c":"Property","l":"concreteClass()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ConditionalExpressions","l":"condition(Expression, Expression, Expression)","url":"condition(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"connectFromField(String)","url":"connectFromField(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"connectToField(String)","url":"connectToField(java.lang.String)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation","l":"ConstraintViolation(ConstraintViolation.Level, EntityModel, Class<? extends ClassConstraint>, String)","url":"%3Cinit%3E(dev.morphia.mapping.validation.ConstraintViolation.Level,dev.morphia.mapping.codec.pojo.EntityModel,java.lang.Class,java.lang.String)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation","l":"ConstraintViolation(ConstraintViolation.Level, EntityModel, FieldModel, Class<? extends ClassConstraint>, String)","url":"%3Cinit%3E(dev.morphia.mapping.validation.ConstraintViolation.Level,dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.mapping.codec.pojo.FieldModel,java.lang.Class,java.lang.String)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolationException","l":"ConstraintViolationException(Collection<ConstraintViolation>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolationException","l":"ConstraintViolationException(ConstraintViolation...)","url":"%3Cinit%3E(dev.morphia.mapping.validation.ConstraintViolation...)"},{"p":"dev.morphia.mapping.experimental","c":"ConstructorCreator","l":"ConstructorCreator(EntityModel, Constructor<?>)","url":"%3Cinit%3E(dev.morphia.mapping.codec.pojo.EntityModel,java.lang.reflect.Constructor)"},{"p":"dev.morphia.mapping.validation","c":"ConstructorParameterNameConstraint","l":"ConstructorParameterNameConstraint()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"FieldEnd","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"contains(String)","url":"contains(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"containsIgnoreCase(String)","url":"containsIgnoreCase(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"containsIgnoreCase(String)","url":"containsIgnoreCase(java.lang.String)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"ContradictingFieldAnnotation","l":"ContradictingFieldAnnotation(Class<? extends Annotation>, Class<? extends Annotation>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystem","l":"convert()"},{"p":"dev.morphia.geo","c":"Geometry","l":"convert()"},{"p":"dev.morphia.geo","c":"LineString","l":"convert()"},{"p":"dev.morphia.geo","c":"MultiLineString","l":"convert()"},{"p":"dev.morphia.geo","c":"MultiPoint","l":"convert()"},{"p":"dev.morphia.geo","c":"MultiPolygon","l":"convert()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"convert()"},{"p":"dev.morphia.geo","c":"Point","l":"convert()"},{"p":"dev.morphia.geo","c":"Polygon","l":"convert()"},{"p":"dev.morphia.geo","c":"Geometry","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.geo","c":"LineString","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.geo","c":"MultiLineString","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.geo","c":"MultiPoint","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.geo","c":"MultiPolygon","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.geo","c":"Point","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.geo","c":"Polygon","l":"convert(CoordinateReferenceSystem)","url":"convert(dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"convert(Expression, ConvertType)","url":"convert(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.ConvertType)"},{"p":"dev.morphia.mapping.codec","c":"Conversions","l":"convert(Object, Class<T>)","url":"convert(java.lang.Object,java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertExpression","l":"ConvertExpression(Expression, ConvertType)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.ConvertType)"},{"p":"dev.morphia.geo","c":"GeoJson","l":"convertLineStrings(List<LineString>)","url":"convertLineStrings(java.util.List)"},{"p":"dev.morphia.geo","c":"GeoJson","l":"convertPoints(List<Point>)","url":"convertPoints(java.util.List)"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystem","l":"CoordinateReferenceSystem()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"FindOptions","l":"copy()"},{"p":"dev.morphia.query","c":"FindOptions","l":"copy(FindOptions)","url":"copy(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"cos(Expression)","url":"cos(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"CappedAt","l":"count()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"count()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"count()"},{"p":"dev.morphia.query","c":"Query","l":"count()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"count(boolean)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"count(CountOptions)","url":"count(dev.morphia.query.CountOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"count(CountOptions)","url":"count(dev.morphia.query.CountOptions)"},{"p":"dev.morphia.query","c":"Query","l":"count(CountOptions)","url":"count(dev.morphia.query.CountOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"count(String)","url":"count(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"count(String)","url":"count(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Count","l":"Count(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CountCodec","l":"CountCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"CountOptions","l":"CountOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"InstanceCreatorFactory","l":"create()"},{"p":"dev.morphia.mapping","c":"InstanceCreatorFactoryImpl","l":"create()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"createAggregation(Class)","url":"createAggregation(java.lang.Class)"},{"p":"dev.morphia","c":"Datastore","l":"createAggregation(Class<?>)","url":"createAggregation(java.lang.Class)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"createAggregation(String, Class<?>)","url":"createAggregation(java.lang.String,java.lang.Class)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"createAggregation(String, Class<?>)","url":"createAggregation(java.lang.String,java.lang.Class)"},{"p":"dev.morphia","c":"Morphia","l":"createDatastore(MongoClient, String, MapperOptions)","url":"createDatastore(com.mongodb.client.MongoClient,java.lang.String,dev.morphia.mapping.MapperOptions)"},{"p":"dev.morphia","c":"Morphia","l":"createDatastore(MongoClient, String)","url":"createDatastore(com.mongodb.client.MongoClient,java.lang.String)"},{"p":"dev.morphia","c":"Morphia","l":"createDatastore(String, MapperOptions)","url":"createDatastore(java.lang.String,dev.morphia.mapping.MapperOptions)"},{"p":"dev.morphia","c":"Morphia","l":"createDatastore(String)","url":"createDatastore(java.lang.String)"},{"p":"dev.morphia.annotations","c":"IndexHelper","l":"createIndex(MongoCollection<?>, EntityModel)","url":"createIndex(com.mongodb.client.MongoCollection,dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia","c":"ObjectFactory","l":"createInstance(Class<T>, Document)","url":"createInstance(java.lang.Class,org.bson.Document)"},{"p":"dev.morphia","c":"ObjectFactory","l":"createInstance(Class<T>)","url":"createInstance(java.lang.Class)"},{"p":"dev.morphia","c":"ObjectFactory","l":"createInstance(Mapper, FieldModel, Document)","url":"createInstance(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.FieldModel,org.bson.Document)"},{"p":"dev.morphia","c":"ObjectFactory","l":"createList(FieldModel)","url":"createList(dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia","c":"ObjectFactory","l":"createMap(FieldModel)","url":"createMap(dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"createQuery(Class<T>, Document)","url":"createQuery(java.lang.Class,org.bson.Document)"},{"p":"dev.morphia","c":"Datastore","l":"createQuery(Class<T>)","url":"createQuery(java.lang.Class)"},{"p":"dev.morphia.query","c":"DefaultQueryFactory","l":"createQuery(Datastore, Class<T>, Document)","url":"createQuery(dev.morphia.Datastore,java.lang.Class,org.bson.Document)"},{"p":"dev.morphia.query","c":"LegacyQueryFactory","l":"createQuery(Datastore, Class<T>, Document)","url":"createQuery(dev.morphia.Datastore,java.lang.Class,org.bson.Document)"},{"p":"dev.morphia.query","c":"QueryFactory","l":"createQuery(Datastore, Class<T>, Document)","url":"createQuery(dev.morphia.Datastore,java.lang.Class,org.bson.Document)"},{"p":"dev.morphia.query","c":"AbstractQueryFactory","l":"createQuery(Datastore, Class<T>)","url":"createQuery(dev.morphia.Datastore,java.lang.Class)"},{"p":"dev.morphia.query","c":"QueryFactory","l":"createQuery(Datastore, Class<T>)","url":"createQuery(dev.morphia.Datastore,java.lang.Class)"},{"p":"dev.morphia.query","c":"DefaultQueryFactory","l":"createQuery(Datastore, String, Class<T>)","url":"createQuery(dev.morphia.Datastore,java.lang.String,java.lang.Class)"},{"p":"dev.morphia.query","c":"LegacyQueryFactory","l":"createQuery(Datastore, String, Class<T>)","url":"createQuery(dev.morphia.Datastore,java.lang.String,java.lang.Class)"},{"p":"dev.morphia.query","c":"QueryFactory","l":"createQuery(Datastore, String, Class<T>)","url":"createQuery(dev.morphia.Datastore,java.lang.String,java.lang.Class)"},{"p":"dev.morphia.query","c":"DefaultQueryFactory","l":"createQuery(Datastore)","url":"createQuery(dev.morphia.Datastore)"},{"p":"dev.morphia.query","c":"LegacyQueryFactory","l":"createQuery(Datastore)","url":"createQuery(dev.morphia.Datastore)"},{"p":"dev.morphia.query","c":"QueryFactory","l":"createQuery(Datastore)","url":"createQuery(dev.morphia.Datastore)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"createRef(Class<T>, V)","url":"createRef(java.lang.Class,V)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"createRef(T)"},{"p":"dev.morphia","c":"ObjectFactory","l":"createSet(FieldModel)","url":"createSet(dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"createUpdateOperations(Class<T>, DBObject)","url":"createUpdateOperations(java.lang.Class,com.mongodb.DBObject)"},{"p":"dev.morphia","c":"Datastore","l":"createUpdateOperations(Class<T>)","url":"createUpdateOperations(java.lang.Class)"},{"p":"dev.morphia.query","c":"CriteriaContainer","l":"criteria(String)","url":"criteria(java.lang.String)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"criteria(String)","url":"criteria(java.lang.String)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"criteria(String)","url":"criteria(java.lang.String)"},{"p":"dev.morphia.query","c":"Query","l":"criteria(String)","url":"criteria(java.lang.String)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"CriteriaContainerImpl(Mapper, LegacyQuery<?>, CriteriaJoin)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper,dev.morphia.query.LegacyQuery,dev.morphia.query.CriteriaJoin)"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"CRS_84"},{"p":"dev.morphia.query.experimental.filters","c":"GeoWithinFilter","l":"crs(CoordinateReferenceSystem)","url":"crs(com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query.experimental.filters","c":"NearFilter","l":"crs(CoordinateReferenceSystem)","url":"crs(com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"CURRENT"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"currentDate(String)","url":"currentDate(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator","l":"CurrentDateOperator(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"CurrentOp()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"currentOp(CurrentOp)","url":"currentOp(dev.morphia.aggregation.experimental.stages.CurrentOp)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"currentOp(CurrentOp)","url":"currentOp(dev.morphia.aggregation.experimental.stages.CurrentOp)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CurrentOpCodec","l":"CurrentOpCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"currentState()"},{"p":"dev.morphia.query","c":"FindOptions","l":"cursorType(CursorType)","url":"cursorType(com.mongodb.CursorType)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"DatastoreImpl(MongoClient, MapperOptions, String)","url":"%3Cinit%3E(com.mongodb.client.MongoClient,dev.morphia.mapping.MapperOptions,java.lang.String)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"DatastoreImpl(MongoDatabase, MongoClient, Mapper, QueryFactory)","url":"%3Cinit%3E(com.mongodb.client.MongoDatabase,com.mongodb.client.MongoClient,dev.morphia.mapping.Mapper,dev.morphia.query.QueryFactory)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"DATE"},{"p":"dev.morphia.query","c":"Type","l":"DATE"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator.TypeSpecification","l":"DATE"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"date(Expression)","url":"date(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"date(String)","url":"date(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions.DateExpression","l":"DateExpression(String, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"dateForm(DateStorage)","url":"dateForm(dev.morphia.mapping.DateStorage)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dateFromParts()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"DateFromParts()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dateFromString()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"DateFromString()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"dateStorage(DateStorage)","url":"dateStorage(dev.morphia.mapping.DateStorage)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"dateString(Expression)","url":"dateString(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"dateString(String)","url":"dateString(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dateToParts(Expression)","url":"dateToParts(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToParts","l":"DateToParts(Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dateToString()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"DateToString()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"day(Expression)","url":"day(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"day(int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dayOfMonth(Expression)","url":"dayOfMonth(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dayOfWeek(Expression)","url":"dayOfWeek(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"dayOfYear(Expression)","url":"dayOfYear(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"dec(String, Number)","url":"dec(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"dec(String, Number)","url":"dec(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"Updates","l":"dec(String, Number)","url":"dec(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"dec(String, Number)","url":"dec(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"dec(String)","url":"dec(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"dec(String)","url":"dec(java.lang.String)"},{"p":"dev.morphia.query","c":"Updates","l":"dec(String)","url":"dec(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"dec(String)","url":"dec(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"DECIMAL"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"StageCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"ByteWrapperArrayCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"ClassCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"CollectionCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"EnumCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"KeyCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"LegacyQueryCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"LocaleCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaDateCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalDateTimeCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalTimeCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaQueryCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"ObjectCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec","c":"URICodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityDecoder","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReferenceCodec","l":"decode(BsonReader, DecoderContext)","url":"decode(org.bson.BsonReader,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.mapping.experimental","c":"SingleReference","l":"decode(Datastore, Mapper, FieldModel, Class<?>, Document)","url":"decode(dev.morphia.Datastore,dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.FieldModel,java.lang.Class,org.bson.Document)"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"decode(Datastore, Mapper, FieldModel, Document)","url":"decode(dev.morphia.Datastore,dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.FieldModel,org.bson.Document)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityDecoder","l":"decodeModel(BsonReader, DecoderContext, MorphiaInstanceCreator, FieldModel)","url":"decodeModel(org.bson.BsonReader,org.bson.codecs.DecoderContext,dev.morphia.mapping.codec.MorphiaInstanceCreator,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityDecoder","l":"decodeProperties(BsonReader, DecoderContext, MorphiaInstanceCreator, EntityModel)","url":"decodeProperties(org.bson.BsonReader,org.bson.codecs.DecoderContext,dev.morphia.mapping.codec.MorphiaInstanceCreator,dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"DEFAULT"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SwitchExpression","l":"defaultCase(Expression)","url":"defaultCase(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"BucketOptions","l":"defaultField(Object)","url":"defaultField(java.lang.Object)"},{"p":"dev.morphia.query","c":"DefaultQueryFactory","l":"DefaultQueryFactory()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ZipExpression","l":"defaults(Expression)","url":"defaults(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"defaultValue(Object)","url":"defaultValue(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"degreesToRadians(Expression)","url":"degreesToRadians(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"Query","l":"delete()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"delete(DeleteOptions)","url":"delete(dev.morphia.DeleteOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"delete(DeleteOptions)","url":"delete(dev.morphia.DeleteOptions)"},{"p":"dev.morphia.query","c":"Query","l":"delete(DeleteOptions)","url":"delete(dev.morphia.DeleteOptions)"},{"p":"dev.morphia","c":"Datastore","l":"delete(Query<T>, DeleteOptions)","url":"delete(dev.morphia.query.Query,dev.morphia.DeleteOptions)"},{"p":"dev.morphia","c":"Datastore","l":"delete(Query<T>)","url":"delete(dev.morphia.query.Query)"},{"p":"dev.morphia","c":"Datastore","l":"delete(T, DeleteOptions)","url":"delete(T,dev.morphia.DeleteOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"delete(T, DeleteOptions)","url":"delete(T,dev.morphia.DeleteOptions)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"delete(T, DeleteOptions)","url":"delete(T,dev.morphia.DeleteOptions)"},{"p":"dev.morphia","c":"Datastore","l":"delete(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"delete(T)"},{"p":"dev.morphia","c":"DeleteOptions","l":"DeleteOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"DeleteOptions","l":"DeleteOptions(DeleteOptions)","url":"%3Cinit%3E(dev.morphia.DeleteOptions)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"depthField(String)","url":"depthField(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"DESCEND"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.Direction","l":"DESCENDING"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort","l":"descending(String, String...)","url":"descending(java.lang.String,java.lang.String...)"},{"p":"dev.morphia.query","c":"Sort","l":"descending(String)","url":"descending(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"TextSearchFilter","l":"diacriticSensitive(Boolean)","url":"diacriticSensitive(java.lang.Boolean)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"disableEmbeddedIndexes(boolean)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"disableValidation()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"disableValidation()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"disableValidation()"},{"p":"dev.morphia.query","c":"Query","l":"disableValidation()"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"disableValidation()"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"disableValidation()"},{"p":"dev.morphia.query","c":"Updates","l":"disableValidation()"},{"p":"dev.morphia.annotations","c":"Embedded","l":"discriminator()"},{"p":"dev.morphia.annotations","c":"Entity","l":"discriminator()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"discriminator()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"discriminator()"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"discriminator(DiscriminatorFunction)","url":"discriminator(dev.morphia.mapping.DiscriminatorFunction)"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"discriminator(String)","url":"discriminator(java.lang.String)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"discriminator(String)","url":"discriminator(java.lang.String)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"discriminatorEnabled()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"discriminatorEnabled(Boolean)","url":"discriminatorEnabled(java.lang.Boolean)"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"DiscriminatorFunction()","url":"%3Cinit%3E()"},{"p":"dev.morphia.annotations","c":"Embedded","l":"discriminatorKey()"},{"p":"dev.morphia.annotations","c":"Entity","l":"discriminatorKey()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"discriminatorKey()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"discriminatorKey()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"discriminatorKey(String)","url":"discriminatorKey(java.lang.String)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"discriminatorKey(String)","url":"discriminatorKey(java.lang.String)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"discriminatorKey(String)","url":"discriminatorKey(java.lang.String)"},{"p":"dev.morphia.mapping","c":"DiscriminatorLookup","l":"DiscriminatorLookup(ClassLoader)","url":"%3Cinit%3E(java.lang.ClassLoader)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"distanceField(String)","url":"distanceField(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"distanceMultiplier(Number)","url":"distanceMultiplier(java.lang.Number)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"divide(Expression, Expression)","url":"divide(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"divide(Object, Object)","url":"divide(java.lang.Object,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"document(BsonWriter, Runnable)","url":"document(org.bson.BsonWriter,java.lang.Runnable)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"document(BsonWriter, String, Runnable)","url":"document(org.bson.BsonWriter,java.lang.String,java.lang.Runnable)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"document(Document, Consumer<BsonWriter>)","url":"document(org.bson.Document,java.util.function.Consumer)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DocumentExpression","l":"DocumentExpression()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"documentHasId(Object)","url":"documentHasId(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"DocumentReader(Document)","url":"%3Cinit%3E(org.bson.Document)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"DocumentWriter()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"DocumentWriter(Document)","url":"%3Cinit%3E(org.bson.Document)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"doesNotExist()"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"doesNotExist()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"DOUBLE"},{"p":"dev.morphia.query","c":"Type","l":"DOUBLE"},{"p":"dev.morphia.mapping.validation.classrules","c":"DuplicatedAttributeNames","l":"DuplicatedAttributeNames()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"E12"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"E192"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"E24"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"E48"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"E6"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"E96"},{"p":"dev.morphia.query","c":"FilterOperator","l":"ELEMENT_MATCH"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"elementAt(Expression, Expression)","url":"elementAt(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"elemMatch(Query)","url":"elemMatch(dev.morphia.query.Query)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"elemMatch(Query<?>)","url":"elemMatch(dev.morphia.query.Query)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"elemMatch(String, Filter...)","url":"elemMatch(java.lang.String,dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EmbeddedAndId","l":"EmbeddedAndId()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.validation.classrules","c":"EmbeddedAndValue","l":"EmbeddedAndValue()","url":"%3Cinit%3E()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"EmbeddedBuilder()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"enableDiscriminator(boolean)"},{"p":"dev.morphia","c":"Datastore","l":"enableDocumentValidation()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"enableDocumentValidation()"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"enablePolymorphicQueries(boolean)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"enableValidation()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"enableValidation()"},{"p":"dev.morphia.query","c":"Query","l":"enableValidation()"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"enableValidation()"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"enableValidation()"},{"p":"dev.morphia.query","c":"Updates","l":"enableValidation()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"enableValidation(EntityModel, Validation)","url":"enableValidation(dev.morphia.mapping.codec.pojo.EntityModel,dev.morphia.annotations.Validation)"},{"p":"dev.morphia.mapping.codec","c":"ByteWrapperArrayCodec","l":"encode(BsonWriter, Byte[], EncoderContext)","url":"encode(org.bson.BsonWriter,java.lang.Byte[],org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"ClassCodec","l":"encode(BsonWriter, Class, EncoderContext)","url":"encode(org.bson.BsonWriter,java.lang.Class,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"CollectionCodec","l":"encode(BsonWriter, Collection<T>, EncoderContext)","url":"encode(org.bson.BsonWriter,java.util.Collection,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"KeyCodec","l":"encode(BsonWriter, Key, EncoderContext)","url":"encode(org.bson.BsonWriter,dev.morphia.Key,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"LegacyQueryCodec","l":"encode(BsonWriter, LegacyQuery, EncoderContext)","url":"encode(org.bson.BsonWriter,dev.morphia.query.LegacyQuery,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaDateCodec","l":"encode(BsonWriter, LocalDate, EncoderContext)","url":"encode(org.bson.BsonWriter,java.time.LocalDate,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalDateTimeCodec","l":"encode(BsonWriter, LocalDateTime, EncoderContext)","url":"encode(org.bson.BsonWriter,java.time.LocalDateTime,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"LocaleCodec","l":"encode(BsonWriter, Locale, EncoderContext)","url":"encode(org.bson.BsonWriter,java.util.Locale,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalTimeCodec","l":"encode(BsonWriter, LocalTime, EncoderContext)","url":"encode(org.bson.BsonWriter,java.time.LocalTime,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaMapCodec","l":"encode(BsonWriter, Map, EncoderContext)","url":"encode(org.bson.BsonWriter,java.util.Map,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaQueryCodec","l":"encode(BsonWriter, MorphiaQuery, EncoderContext)","url":"encode(org.bson.BsonWriter,dev.morphia.query.MorphiaQuery,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReferenceCodec","l":"encode(BsonWriter, MorphiaReference, EncoderContext)","url":"encode(org.bson.BsonWriter,dev.morphia.mapping.experimental.MorphiaReference,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"ObjectCodec","l":"encode(BsonWriter, Object, EncoderContext)","url":"encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"encode(BsonWriter, Object, EncoderContext)","url":"encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"encode(BsonWriter, Object, EncoderContext)","url":"encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionCodec","l":"encode(BsonWriter, T, EncoderContext)","url":"encode(org.bson.BsonWriter,T,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"StageCodec","l":"encode(BsonWriter, T, EncoderContext)","url":"encode(org.bson.BsonWriter,T,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"EnumCodec","l":"encode(BsonWriter, T, EncoderContext)","url":"encode(org.bson.BsonWriter,T,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"URICodec","l":"encode(BsonWriter, URI, EncoderContext)","url":"encode(org.bson.BsonWriter,java.net.URI,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.Direction","l":"encode(BsonWriter)","url":"encode(org.bson.BsonWriter)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"encode(CodecRegistry, Object, EncoderContext)","url":"encode(org.bson.codecs.configuration.CodecRegistry,java.lang.Object,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions.DateExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ObjectExpressions.MergeObjects","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Accumulator","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"AccumulatorExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayFilterExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayIndexExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayLiteral","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToParts","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DocumentExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Expression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"FunctionExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IndexExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IsoDates","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"LetExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"LiteralExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MapExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MathExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MetaExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"PipelineField","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Push","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RangeExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ReduceExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RegexExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ReplaceExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SliceExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SwitchExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"TrimExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ValueExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ZipExpression","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.filters","c":"GeoIntersectsFilter","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.filters","c":"GeoWithinFilter","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.filters","c":"NearFilter","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.filters","c":"TextSearchFilter","l":"encode(Mapper, BsonWriter, EncoderContext)","url":"encode(dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.experimental","c":"CollectionReference","l":"encode(Mapper, Object, FieldModel)","url":"encode(dev.morphia.mapping.Mapper,java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"encode(Mapper, Object, FieldModel)","url":"encode(dev.morphia.mapping.Mapper,java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"encode(Mapper, Object, FieldModel)","url":"encode(dev.morphia.mapping.Mapper,java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.experimental","c":"SingleReference","l":"encode(Mapper, Object, FieldModel)","url":"encode(dev.morphia.mapping.Mapper,java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.query","c":"OperationTarget","l":"encode(Mapper)","url":"encode(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec.pojo","c":"PropertyHandler","l":"encode(Object)","url":"encode(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"encode(Object)","url":"encode(java.lang.Object)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReferenceCodec","l":"encode(Object)","url":"encode(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DocumentExpression","l":"encode(String, Mapper, BsonWriter, EncoderContext)","url":"encode(java.lang.String,dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"encodeId(Mapper, Datastore, Object, EntityModel)","url":"encodeId(dev.morphia.mapping.Mapper,dev.morphia.Datastore,java.lang.Object,dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"encodeId(Mapper, Datastore, Object, FieldModel)","url":"encodeId(dev.morphia.mapping.Mapper,dev.morphia.Datastore,java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"AddFieldsCodec","l":"encodeStage(BsonWriter, AddFields, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.AddFields,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"AutoBucketCodec","l":"encodeStage(BsonWriter, AutoBucket, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.AutoBucket,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"BucketCodec","l":"encodeStage(BsonWriter, Bucket, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Bucket,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CollectionStatsCodec","l":"encodeStage(BsonWriter, CollectionStats, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.CollectionStats,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CountCodec","l":"encodeStage(BsonWriter, Count, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Count,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CurrentOpCodec","l":"encodeStage(BsonWriter, CurrentOp, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.CurrentOp,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"FacetCodec","l":"encodeStage(BsonWriter, Facet, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Facet,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GeoNearCodec","l":"encodeStage(BsonWriter, GeoNear, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.GeoNear,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GraphLookupCodec","l":"encodeStage(BsonWriter, GraphLookup, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.GraphLookup,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GroupCodec","l":"encodeStage(BsonWriter, Group, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Group,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"IndexStatsCodec","l":"encodeStage(BsonWriter, IndexStats, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.IndexStats,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"LimitCodec","l":"encodeStage(BsonWriter, Limit, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Limit,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"LookupCodec","l":"encodeStage(BsonWriter, Lookup, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Lookup,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"MatchCodec","l":"encodeStage(BsonWriter, Match, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Match,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"MergeCodec","l":"encodeStage(BsonWriter, Merge, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Merge,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"OutCodec","l":"encodeStage(BsonWriter, Out, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Out,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"PlanCacheStatsCodec","l":"encodeStage(BsonWriter, PlanCacheStats, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.PlanCacheStats,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ProjectionCodec","l":"encodeStage(BsonWriter, Projection, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Projection,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"RedactCodec","l":"encodeStage(BsonWriter, Redact, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Redact,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ReplaceRootCodec","l":"encodeStage(BsonWriter, ReplaceRoot, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.ReplaceRoot,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ReplaceWithCodec","l":"encodeStage(BsonWriter, ReplaceWith, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.ReplaceWith,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SampleCodec","l":"encodeStage(BsonWriter, Sample, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Sample,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SkipCodec","l":"encodeStage(BsonWriter, Skip, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Skip,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SortCodec","l":"encodeStage(BsonWriter, Sort, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Sort,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SortByCountCodec","l":"encodeStage(BsonWriter, SortByCount, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.SortByCount,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"StageCodec","l":"encodeStage(BsonWriter, T, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,T,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnionWithCodec","l":"encodeStage(BsonWriter, UnionWith, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.UnionWith,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnsetCodec","l":"encodeStage(BsonWriter, Unset, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Unset,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnwindCodec","l":"encodeStage(BsonWriter, Unwind, EncoderContext)","url":"encodeStage(org.bson.BsonWriter,dev.morphia.aggregation.experimental.stages.Unwind,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IndexExpression","l":"end(int)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayIndexExpression","l":"end(Integer)","url":"end(java.lang.Integer)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"endsWith(String)","url":"endsWith(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"endsWith(String)","url":"endsWith(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"endsWithIgnoreCase(String)","url":"endsWithIgnoreCase(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"endsWithIgnoreCase(String)","url":"endsWithIgnoreCase(java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"enforceWriteConcern(MongoCollection, Class)","url":"enforceWriteConcern(com.mongodb.client.MongoCollection,java.lang.Class)"},{"p":"dev.morphia","c":"Datastore","l":"ensureCaps()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"ensureCaps()"},{"p":"dev.morphia","c":"Datastore","l":"ensureIndexes()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"ensureIndexes()"},{"p":"dev.morphia","c":"Datastore","l":"ensureIndexes(Class<T>)","url":"ensureIndexes(java.lang.Class)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"ensureIndexes(Class<T>)","url":"ensureIndexes(java.lang.Class)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EntityAndEmbed","l":"EntityAndEmbed()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.validation.classrules","c":"EntityCannotBeMapOrIterable","l":"EntityCannotBeMapOrIterable()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityDecoder","l":"EntityDecoder(MorphiaCodec<?>)","url":"%3Cinit%3E(dev.morphia.mapping.codec.pojo.MorphiaCodec)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"entityModel()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"entityModel(EntityModel)","url":"entityModel(dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"EntityModelBuilder(Datastore, A, Class<T>)","url":"%3Cinit%3E(dev.morphia.Datastore,A,java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"EntityModelBuilder(Datastore, Class<?>)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.Class)"},{"p":"dev.morphia.mapping.validation.classrules","c":"EntityOrEmbed","l":"EntityOrEmbed()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"entityType(Class<?>)","url":"entityType(java.lang.Class)"},{"p":"dev.morphia.mapping.codec","c":"EnumCodec","l":"EnumCodec(Class<T>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"dev.morphia.mapping.codec","c":"EnumCodecProvider","l":"EnumCodecProvider()","url":"%3Cinit%3E()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"EPSG_4326"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"EPSG_4326_STRICT_WINDING"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"eq(Expression, Expression)","url":"eq(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"eq(String, Object)","url":"eq(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"EQUAL"},{"p":"dev.morphia.query","c":"FieldEnd","l":"equal(Object)","url":"equal(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"equal(Object)","url":"equal(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"equalIgnoreCase(Object)","url":"equalIgnoreCase(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"equalIgnoreCase(Object)","url":"equalIgnoreCase(java.lang.Object)"},{"p":"dev.morphia","c":"Key","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"GeometryCollection","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"LineString","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"MultiLineString","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"MultiPoint","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"MultiPolygon","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"Point","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.geo","c":"Polygon","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.mapping.codec","c":"BsonTypeMap","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.query","c":"FindOptions","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"dev.morphia.query","c":"Projection","l":"exclude(String...)","url":"exclude(java.lang.String...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"exclude(String)","url":"exclude(java.lang.String)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"execute()"},{"p":"dev.morphia.query","c":"Modify","l":"execute()"},{"p":"dev.morphia.query","c":"Query","l":"execute()"},{"p":"dev.morphia.query","c":"Update","l":"execute()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"execute(Class<R>, AggregationOptions)","url":"execute(java.lang.Class,dev.morphia.aggregation.experimental.AggregationOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"execute(Class<R>)","url":"execute(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"execute(Class<S>, AggregationOptions)","url":"execute(java.lang.Class,dev.morphia.aggregation.experimental.AggregationOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"execute(Class<S>)","url":"execute(java.lang.Class)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"execute(FindOptions)","url":"execute(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Query","l":"execute(FindOptions)","url":"execute(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Modify","l":"execute(ModifyOptions)","url":"execute(dev.morphia.ModifyOptions)"},{"p":"dev.morphia.transactions.experimental","c":"MorphiaTransaction","l":"execute(MorphiaSession)","url":"execute(dev.morphia.experimental.MorphiaSession)"},{"p":"dev.morphia.query","c":"Update","l":"execute(UpdateOptions)","url":"execute(dev.morphia.UpdateOptions)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"EXISTS"},{"p":"dev.morphia.query","c":"FieldEnd","l":"exists()"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"exists()"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"exists(String)","url":"exists(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"exp(Expression)","url":"exp(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"expireAfterSeconds()"},{"p":"dev.morphia.query","c":"Query","l":"explain()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"explain(FindOptions)","url":"explain(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"explain(FindOptions)","url":"explain(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Query","l":"explain(FindOptions)","url":"explain(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"expr(Expression)","url":"expr(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"expression(Mapper, BsonWriter, Expression, EncoderContext)","url":"expression(dev.morphia.mapping.Mapper,org.bson.BsonWriter,dev.morphia.aggregation.experimental.expressions.impls.Expression,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"expression(Mapper, BsonWriter, String, Expression, EncoderContext)","url":"expression(dev.morphia.mapping.Mapper,org.bson.BsonWriter,java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"expression(String, Object...)","url":"expression(java.lang.String,java.lang.Object...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Expression","l":"Expression(String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Expression","l":"Expression(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionCodec","l":"ExpressionCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"extended()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Facet","l":"Facet()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"facet(Facet)","url":"facet(dev.morphia.aggregation.experimental.stages.Facet)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"facet(Facet)","url":"facet(dev.morphia.aggregation.experimental.stages.Facet)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"FacetCodec","l":"FacetCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"FATAL"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"field()"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"field()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"field(Field)","url":"field(java.lang.reflect.Field)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DocumentExpression","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"FieldHolder","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Push","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AddFields","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group.GroupId","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"field(String, Expression)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Facet","l":"field(String, Stage...)","url":"field(java.lang.String,dev.morphia.aggregation.experimental.stages.Stage...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"Expressions","l":"field(String)","url":"field(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"field(String)","url":"field(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group.GroupId","l":"field(String)","url":"field(java.lang.String)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"field(String)","url":"field(java.lang.String)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"field(String)","url":"field(java.lang.String)"},{"p":"dev.morphia.query","c":"Query","l":"field(String)","url":"field(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"FieldAccessor","l":"FieldAccessor(Field)","url":"%3Cinit%3E(java.lang.reflect.Field)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"FieldConstraint","l":"FieldConstraint()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"FieldEndImpl(Mapper, String, T, EntityModel, boolean)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper,java.lang.String,T,dev.morphia.mapping.codec.pojo.EntityModel,boolean)"},{"p":"dev.morphia.mapping.validation.classrules","c":"FieldEnumString","l":"FieldEnumString(FieldModel...)","url":"%3Cinit%3E(dev.morphia.mapping.codec.pojo.FieldModel...)"},{"p":"dev.morphia.mapping.validation.classrules","c":"FieldEnumString","l":"FieldEnumString(List<FieldModel>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"fieldModelByFieldName(String)","url":"fieldModelByFieldName(java.lang.String)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"fieldModels()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"fieldName(String)","url":"fieldName(java.lang.String)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"fieldNaming(NamingStrategy)","url":"fieldNaming(dev.morphia.mapping.NamingStrategy)"},{"p":"dev.morphia.annotations","c":"Index","l":"fields()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unset","l":"fields(String, String...)","url":"fields(java.lang.String,java.lang.String...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"Fields(T)","url":"%3Cinit%3E(T)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"filter(Expression, Expression)","url":"filter(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"filter(Filter...)","url":"filter(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.query","c":"Query","l":"filter(Filter...)","url":"filter(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"filter(String, Object)","url":"filter(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"filter(String, Object)","url":"filter(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Query","l":"filter(String, Object)","url":"filter(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"Filter(String, String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"Filter(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"AccumulatorExpression","l":"finalizeFunction(String)","url":"finalizeFunction(java.lang.String)"},{"p":"dev.morphia.query","c":"Query","l":"find()"},{"p":"dev.morphia","c":"Datastore","l":"find(Class<T>)","url":"find(java.lang.Class)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"find(Class<T>)","url":"find(java.lang.Class)"},{"p":"dev.morphia.query","c":"Query","l":"find(FindOptions)","url":"find(dev.morphia.query.FindOptions)"},{"p":"dev.morphia","c":"Datastore","l":"find(String, Class<T>)","url":"find(java.lang.String,java.lang.Class)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"find(String, Class<T>)","url":"find(java.lang.String,java.lang.Class)"},{"p":"dev.morphia","c":"Datastore","l":"find(String)","url":"find(java.lang.String)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"find(String)","url":"find(java.lang.String)"},{"p":"dev.morphia.query","c":"Query","l":"findAndDelete()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"findAndDelete(FindAndDeleteOptions)","url":"findAndDelete(dev.morphia.query.FindAndDeleteOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"findAndDelete(FindAndDeleteOptions)","url":"findAndDelete(dev.morphia.query.FindAndDeleteOptions)"},{"p":"dev.morphia.query","c":"Query","l":"findAndDelete(FindAndDeleteOptions)","url":"findAndDelete(dev.morphia.query.FindAndDeleteOptions)"},{"p":"dev.morphia","c":"Datastore","l":"findAndDelete(Query<T>, FindAndModifyOptions)","url":"findAndDelete(dev.morphia.query.Query,dev.morphia.FindAndModifyOptions)"},{"p":"dev.morphia","c":"Datastore","l":"findAndDelete(Query<T>)","url":"findAndDelete(dev.morphia.query.Query)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"FindAndDeleteOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"Datastore","l":"findAndModify(Query<T>, UpdateOperations<T>, FindAndModifyOptions)","url":"findAndModify(dev.morphia.query.Query,dev.morphia.query.UpdateOperations,dev.morphia.FindAndModifyOptions)"},{"p":"dev.morphia","c":"Datastore","l":"findAndModify(Query<T>, UpdateOperations<T>)","url":"findAndModify(dev.morphia.query.Query,dev.morphia.query.UpdateOperations)"},{"p":"dev.morphia","c":"FindAndModifyOptions","l":"FindAndModifyOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"FindOptions","l":"FindOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"Datastore","l":"findSession(SessionConfigurable<?>)","url":"findSession(dev.morphia.internal.SessionConfigurable)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"findSession(SessionConfigurable<?>)","url":"findSession(dev.morphia.internal.SessionConfigurable)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"first()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"first()"},{"p":"dev.morphia.query","c":"Query","l":"first()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"first(Expression)","url":"first(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"first(FindOptions)","url":"first(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"first(FindOptions)","url":"first(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Query","l":"first(FindOptions)","url":"first(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.aggregation","c":"Group","l":"first(String)","url":"first(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"floor(Expression)","url":"floor(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"flush()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"foreignField(String)","url":"foreignField(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"format(Expression)","url":"format(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"format(Expression)","url":"format(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"format(String)","url":"format(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"format(String)","url":"format(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"from(Class)","url":"from(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"from(Class<?>)","url":"from(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"from(String)","url":"from(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"from(String)","url":"from(java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"fromDocument(Class<T>, Document)","url":"fromDocument(java.lang.Class,org.bson.Document)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"fromString(String)","url":"fromString(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"function(String, Expression...)","url":"function(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"FunctionExpression","l":"FunctionExpression(String, List<Expression>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"generateIdIfAbsentFromDocument(Object)","url":"generateIdIfAbsentFromDocument(java.lang.Object)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"GEO_NEAR"},{"p":"dev.morphia.query","c":"FilterOperator","l":"GEO_WITHIN"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"geoIntersects(String, Geometry)","url":"geoIntersects(java.lang.String,com.mongodb.client.model.geojson.Geometry)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"geometry(String, Object)","url":"geometry(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.geo","c":"GeoJson","l":"geometryCollection(Geometry...)","url":"geometryCollection(dev.morphia.geo.Geometry...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"GeoNear()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"GeoNear(double[])","url":"%3Cinit%3E(double[])"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"geoNear(GeoNear)","url":"geoNear(dev.morphia.aggregation.GeoNear)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"geoNear(GeoNear)","url":"geoNear(dev.morphia.aggregation.GeoNear)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"geoNear(GeoNear)","url":"geoNear(dev.morphia.aggregation.experimental.stages.GeoNear)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"geoNear(GeoNear)","url":"geoNear(dev.morphia.aggregation.experimental.stages.GeoNear)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"GeoNear(Point)","url":"%3Cinit%3E(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"GeoNearBuilder(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GeoNearCodec","l":"GeoNearCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"geoWithin(String, MultiPolygon)","url":"geoWithin(java.lang.String,com.mongodb.client.model.geojson.MultiPolygon)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"geoWithin(String, Polygon)","url":"geoWithin(java.lang.String,com.mongodb.client.model.geojson.Polygon)"},{"p":"dev.morphia.mapping.experimental","c":"CollectionReference","l":"get()"},{"p":"dev.morphia.mapping.experimental","c":"ListReference","l":"get()"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"get()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"get()"},{"p":"dev.morphia.mapping.experimental","c":"SetReference","l":"get()"},{"p":"dev.morphia.mapping.experimental","c":"SingleReference","l":"get()"},{"p":"dev.morphia.mapping.codec","c":"BsonTypeMap","l":"get(Class<?>)","url":"get(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"AggregationCodecProvider","l":"get(Class<T>, CodecRegistry)","url":"get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec","c":"EnumCodecProvider","l":"get(Class<T>, CodecRegistry)","url":"get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaCodecProvider","l":"get(Class<T>, CodecRegistry)","url":"get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaTypesCodecProvider","l":"get(Class<T>, CodecRegistry)","url":"get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec","c":"PrimitiveCodecRegistry","l":"get(Class<T>, CodecRegistry)","url":"get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec","c":"PrimitiveCodecRegistry","l":"get(Class<T>)","url":"get(java.lang.Class)"},{"p":"dev.morphia.mapping.codec","c":"FieldAccessor","l":"get(Object)","url":"get(java.lang.Object)"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"get(String)","url":"get(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodecRegistryImpl","l":"get(TypeWithTypeParameters<S>)","url":"get(org.bson.codecs.pojo.TypeWithTypeParameters)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaCollectionPropertyCodecProvider","l":"get(TypeWithTypeParameters<T>, PropertyCodecRegistry)","url":"get(org.bson.codecs.pojo.TypeWithTypeParameters,org.bson.codecs.pojo.PropertyCodecRegistry)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getAccessor()"},{"p":"dev.morphia.aggregation","c":"Group","l":"getAccumulator()"},{"p":"dev.morphia.query","c":"BucketAutoOptions","l":"getAccumulators()"},{"p":"dev.morphia.query","c":"BucketOptions","l":"getAccumulators()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getAllowDiskUse()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getAnnotation(Class<A>)","url":"getAnnotation(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"getAnnotation(Class<A>)","url":"getAnnotation(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getAnnotation(Class<A>)","url":"getAnnotation(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"getAnnotation(Class<A>)","url":"getAnnotation(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getAnnotations()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getAnnotations(Class<A>)","url":"getAnnotations(java.lang.Class)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"getArguments()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"getArraysLevel()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getAs()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"getAs()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getBatchSize()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getBatchSize()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"getBoundaries()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"getBuckets()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"getBypassDocumentValidation()"},{"p":"dev.morphia","c":"InsertOneOptions","l":"getBypassDocumentValidation()"},{"p":"dev.morphia","c":"InsertOptions","l":"getBypassDocumentValidation()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getBypassDocumentValidation()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getCachedCodec()"},{"p":"dev.morphia.query","c":"Shape.Center","l":"getCenter()"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"getChildren()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getClass(Document)","url":"getClass(org.bson.Document)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getClass(String)","url":"getClass(java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getClassesMappedToCollection(String)","url":"getClassesMappedToCollection(java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getClassFromCollection(String)","url":"getClassFromCollection(java.lang.String)"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getClassLoader()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getClusterTime()"},{"p":"dev.morphia.mapping.codec","c":"CollectionCodec","l":"getCodec()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getCodec()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityDecoder","l":"getCodecFromDocument(BsonReader, boolean, String, CodecRegistry, DiscriminatorLookup, Codec<?>)","url":"getCodecFromDocument(org.bson.BsonReader,boolean,java.lang.String,org.bson.codecs.configuration.CodecRegistry,dev.morphia.mapping.DiscriminatorLookup,org.bson.codecs.Codec)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionCodec","l":"getCodecRegistry()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"StageCodec","l":"getCodecRegistry()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getCodecRegistry()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getCollation()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getCollation()"},{"p":"dev.morphia","c":"Key","l":"getCollection()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getCollection()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Out","l":"getCollection()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"getCollection()"},{"p":"dev.morphia.query","c":"UpdateBase","l":"getCollection()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getCollection(Class<T>)","url":"getCollection(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"UnionWith","l":"getCollectionName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getCollectionName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"getCollectionName()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getCollectionNaming()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"UnionWith","l":"getCollectionType()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getComment()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getConnectFromField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getConnectToField()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getConventions()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"Geometry","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"LineString","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"MultiLineString","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"MultiPoint","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"MultiPolygon","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"Point","l":"getCoordinates()"},{"p":"dev.morphia.geo","c":"Polygon","l":"getCoordinates()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"getCount()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getCreator()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"getCurrentBsonType()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"getCurrentName()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getCursorType()"},{"p":"dev.morphia","c":"Datastore","l":"getDatabase()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"getDatabase()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getDatabase()"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodec","l":"getDatastore()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"getDatastore()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"getDatastore()"},{"p":"dev.morphia.query","c":"UpdateBase","l":"getDatastore()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getDateStorage()"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"getDecoder()"},{"p":"dev.morphia.query","c":"BucketOptions","l":"getDefaultField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"getDefaultValue()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getDepthField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.SortType","l":"getDirection()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getDiscriminator()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getDiscriminator()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getDiscriminatorKey()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getDiscriminatorKey()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getDiscriminatorLookup()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getDistanceField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getDistanceField()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getDistanceMultiplier()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getDistanceMultiplier()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"getDocsLevel()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"getDocument()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AddFields","l":"getDocument()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group.GroupId","l":"getDocument()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"getDocument()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"getDocument()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"getDocument()"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"getDocumentId(Object)","url":"getDocumentId(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getDocumentValue(Document)","url":"getDocumentValue(org.bson.Document)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getEmbeddedAnnotation()"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"AddFieldsCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"AutoBucketCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"BucketCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CollectionStatsCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CountCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"CurrentOpCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"FacetCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GeoNearCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GraphLookupCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GroupCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"IndexStatsCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"LimitCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"LookupCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"MatchCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"MergeCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"OutCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"PlanCacheStatsCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ProjectionCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"RedactCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ReplaceRootCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ReplaceWithCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SampleCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SkipCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SortByCountCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SortCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnionWithCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnsetCodec","l":"getEncoderClass()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnwindCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"ByteWrapperArrayCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"ClassCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"CollectionCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"EnumCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"KeyCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"LegacyQueryCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"LocaleCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaDateCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalDateTimeCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalTimeCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaQueryCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"ObjectCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec","c":"URICodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReferenceCodec","l":"getEncoderClass()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getEntityAnnotation()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"getEntityClass()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"getEntityClass()"},{"p":"dev.morphia.query","c":"Query","l":"getEntityClass()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getEntityModel()"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"getEntityModel()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getEntityModel(Class)","url":"getEntityModel(java.lang.Class)"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodec","l":"getEntityModelForField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Redact","l":"getExpression()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"SortByCount","l":"getExpression()"},{"p":"dev.morphia.geo","c":"Polygon","l":"getExteriorBoundary()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group.GroupId","l":"getField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.SortType","l":"getField()"},{"p":"dev.morphia.mapping.codec","c":"FieldAccessor","l":"getField()"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodec","l":"getField()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getField()"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"getField()"},{"p":"dev.morphia.query","c":"Meta","l":"getField()"},{"p":"dev.morphia.query","c":"Sort","l":"getField()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"getField()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getField(String)","url":"getField(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodec","l":"getFieldModel()"},{"p":"dev.morphia.query","c":"Criteria","l":"getFieldName()"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"getFieldName()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"getFieldName()"},{"p":"dev.morphia.query","c":"WhereCriteria","l":"getFieldName()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getFieldNaming()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"getFields()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Facet","l":"getFields()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"getFields()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"getFields()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unset","l":"getFields()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getFields()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getFields(Class<? extends Annotation>)","url":"getFields(java.lang.Class)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"getFieldsObject()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getFilters()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Match","l":"getFilters()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"getForeignField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getFrom()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"getFrom()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getFromType()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"getFromType()"},{"p":"dev.morphia.mapping.experimental","c":"ConstructorCreator","l":"getFullConstructor(EntityModel)","url":"getFullConstructor(dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getFullName()"},{"p":"dev.morphia.query","c":"Shape","l":"getGeometry()"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"getGranulality()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"getGranularity()"},{"p":"dev.morphia.query","c":"BucketAutoOptions","l":"getGranularity()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"getGroupBy()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"getGroupBy()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getHint()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"getHistogram()"},{"p":"dev.morphia","c":"Key","l":"getId()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"getId()"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"getId(Mapper, Datastore, EntityModel)","url":"getId(dev.morphia.mapping.Mapper,dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getId(Object)","url":"getId(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"getIdentifier()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getIdField()"},{"p":"dev.morphia.mapping.experimental","c":"CollectionReference","l":"getIds()"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"getIds()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"getIds()"},{"p":"dev.morphia.mapping.experimental","c":"SingleReference","l":"getIds()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"getIncludeArrayIndex()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getIncludeLocations()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getIncludeLocs()"},{"p":"dev.morphia.mapping","c":"NoArgCreator","l":"getInstance()"},{"p":"dev.morphia.mapping.codec","c":"CollectionCodec","l":"getInstance()"},{"p":"dev.morphia.mapping.codec","c":"InstanceCreator","l":"getInstance()"},{"p":"dev.morphia.mapping.experimental","c":"ConstructorCreator","l":"getInstance()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getInstanceCreator()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityDecoder","l":"getInstanceCreator(EntityModel)","url":"getInstanceCreator(dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getInstanceCreatorFactory()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getInterceptors()"},{"p":"dev.morphia.geo","c":"Polygon","l":"getInteriorBoundaries()"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"getJoinMethod()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getKey()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getKey(T, String)","url":"getKey(T,java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getKey(T)"},{"p":"dev.morphia.geo","c":"Point","l":"getLatitude()"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation","l":"getLevel()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getLifecycleMethods()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getLimit()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Limit","l":"getLimit()"},{"p":"dev.morphia.query","c":"ArraySlice","l":"getLimit()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getLimit()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getLoadNames()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"getLocalField()"},{"p":"dev.morphia","c":"Datastore","l":"getLoggedQuery(FindOptions)","url":"getLoggedQuery(dev.morphia.query.FindOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"getLoggedQuery(FindOptions)","url":"getLoggedQuery(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.geo","c":"Point","l":"getLongitude()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getMappedEntities()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getMappedName()"},{"p":"dev.morphia","c":"Datastore","l":"getMapper()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"getMapper()"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionCodec","l":"getMapper()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"StageCodec","l":"getMapper()"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"getMapper()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"getMark()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getMax()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getMaxAwaitTime(TimeUnit)","url":"getMaxAwaitTime(java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getMaxDepth()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getMaxDistance()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getMaxDistance()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getMaxDocuments()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getMaxTime(TimeUnit)","url":"getMaxTime(java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.query","c":"CountOptions","l":"getMaxTime(TimeUnit)","url":"getMaxTime(java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.query","c":"FindOptions","l":"getMaxTime(TimeUnit)","url":"getMaxTime(java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getMaxTimeMS()"},{"p":"dev.morphia.mapping.codec.pojo","c":"ClassMethodPair","l":"getMethod()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getMin()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getMinDistance()"},{"p":"dev.morphia.aggregation","c":"Group","l":"getName()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"getName()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"PipelineField","l":"getName()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Count","l":"getName()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"getName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getName()"},{"p":"dev.morphia.query","c":"Meta.MetaDataKeyword","l":"getName()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"getName()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getNear()"},{"p":"dev.morphia.aggregation","c":"Group","l":"getNested()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getNormalizedType()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getOn()"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"getOperation()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Expression","l":"getOperation()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getOperationTime()"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"getOps()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"getOptions()"},{"p":"dev.morphia","c":"InsertOneOptions","l":"getOptions()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getOptions()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getOptions()"},{"p":"dev.morphia.query","c":"Sort","l":"getOrder()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getOriginator()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"getOutput()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"getOutput()"},{"p":"dev.morphia.mapping.experimental","c":"ConstructorCreator","l":"getParameterName(Parameter)","url":"getParameterName(java.lang.reflect.Parameter)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"getPath()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getPinnedServerAddress()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getPoint()"},{"p":"dev.morphia.query","c":"Shape","l":"getPoints()"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation","l":"getPrefix()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"getPreserveNullAndEmptyArrays()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getProjection()"},{"p":"dev.morphia.aggregation","c":"Group","l":"getProjections()"},{"p":"dev.morphia.aggregation","c":"Projection","l":"getProjections()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getQuery()"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"getQuery()"},{"p":"dev.morphia.query","c":"UpdateBase","l":"getQuery()"},{"p":"dev.morphia","c":"Datastore","l":"getQueryFactory()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"getQueryFactory()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getQueryFactory()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getQueryLogId()"},{"p":"dev.morphia.query","c":"Shape.Center","l":"getRadius()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getReadConcern()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getReadConcern()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"getReadPreference()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getReadPreference()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getRecoveryToken()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaCodecProvider","l":"getRefreshCodec(T, CodecRegistry)","url":"getRefreshCodec(T,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"getReplacement()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getRestriction()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"getScale()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getServerSession()"},{"p":"dev.morphia","c":"Datastore","l":"getSession()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getSession()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sample","l":"getSize()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Skip","l":"getSize()"},{"p":"dev.morphia.query","c":"ArraySlice","l":"getSkip()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getSkip()"},{"p":"dev.morphia.query","c":"FindOptions","l":"getSort()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"getSort()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort","l":"getSorts()"},{"p":"dev.morphia.aggregation","c":"Projection","l":"getSource()"},{"p":"dev.morphia.aggregation","c":"Group","l":"getSourceField()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getSpecializedType()"},{"p":"dev.morphia.aggregation","c":"GeoNear","l":"getSpherical()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"getSpherical()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Stage","l":"getStageName()"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"getStages()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"UnionWith","l":"getStages()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"getStartWith()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getSubtypes()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getSuperClass()"},{"p":"dev.morphia.aggregation","c":"Projection","l":"getTarget()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"getTarget()"},{"p":"dev.morphia.query","c":"OperationTarget","l":"getTarget()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"getTransactionOptions()"},{"p":"dev.morphia","c":"Key","l":"getType()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getType()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Out","l":"getType()"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystem","l":"getType()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"getType()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getType()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"getType()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getType()"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"getType()"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData","l":"getType()"},{"p":"dev.morphia.mapping.experimental","c":"CollectionReference","l":"getType()"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"getType()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"getType()"},{"p":"dev.morphia.mapping.experimental","c":"SingleReference","l":"getType()"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodec","l":"getTypeData()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getTypeData()"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystemType","l":"getTypeName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"getTypeParameters()"},{"p":"dev.morphia.query","c":"UpdateBase","l":"getUpdates()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"getUuidRepresentation()"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"getValue()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Expression","l":"getValue()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"PipelineField","l":"getValue()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"getValue()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"getValue()"},{"p":"dev.morphia.query","c":"OperationTarget","l":"getValue()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"getValue()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"getValue(Mapper)","url":"getValue(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"getValue(Object)","url":"getValue(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"getVariables()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getVariables()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"getVersionField()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getWhenMatched()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getWhenMatchedPipeline()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"getWhenNotMatched()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"getWriteConcern()"},{"p":"dev.morphia","c":"InsertOptions","l":"getWriteConcern()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"getWriteConcern(Class)","url":"getWriteConcern(java.lang.Class)"},{"p":"dev.morphia.mapping","c":"DateStorage","l":"getZone()"},{"p":"dev.morphia.query","c":"BucketAutoOptions","l":"granularity(BucketAutoOptions.Granularity)","url":"granularity(dev.morphia.query.BucketAutoOptions.Granularity)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"granularity(BucketGranularity)","url":"granularity(com.mongodb.client.model.BucketGranularity)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"GraphLookup()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"GraphLookup(Class)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"graphLookup(GraphLookup)","url":"graphLookup(dev.morphia.aggregation.experimental.stages.GraphLookup)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"graphLookup(GraphLookup)","url":"graphLookup(dev.morphia.aggregation.experimental.stages.GraphLookup)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"GraphLookup(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GraphLookupCodec","l":"GraphLookupCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"GREATER_THAN"},{"p":"dev.morphia.query","c":"FilterOperator","l":"GREATER_THAN_OR_EQUAL"},{"p":"dev.morphia.query","c":"FieldEnd","l":"greaterThan(Object)","url":"greaterThan(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"greaterThan(Object)","url":"greaterThan(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"greaterThanOrEq(Object)","url":"greaterThanOrEq(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"greaterThanOrEq(Object)","url":"greaterThanOrEq(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"Group()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"group(Group...)","url":"group(dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"group(Group...)","url":"group(dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"Group(Group.GroupId)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.stages.Group.GroupId)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"group(Group)","url":"group(dev.morphia.aggregation.experimental.stages.Group)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"group(Group)","url":"group(dev.morphia.aggregation.experimental.stages.Group)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"group(List<Group>, Group...)","url":"group(java.util.List,dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"group(List<Group>, Group...)","url":"group(java.util.List,dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"group(String, Group...)","url":"group(java.lang.String,dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"group(String, Group...)","url":"group(java.lang.String,dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"groupBy(Expression)","url":"groupBy(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"groupBy(Expression)","url":"groupBy(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"GroupCodec","l":"GroupCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group.GroupId","l":"GroupId()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group.GroupId","l":"GroupId(Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Group","l":"grouping(String, Accumulator)","url":"grouping(java.lang.String,dev.morphia.aggregation.Accumulator)"},{"p":"dev.morphia.aggregation","c":"Group","l":"grouping(String, Group)","url":"grouping(java.lang.String,dev.morphia.aggregation.Group)"},{"p":"dev.morphia.aggregation","c":"Group","l":"grouping(String, Projection...)","url":"grouping(java.lang.String,dev.morphia.aggregation.Projection...)"},{"p":"dev.morphia.aggregation","c":"Group","l":"grouping(String, String)","url":"grouping(java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation","c":"Group","l":"grouping(String)","url":"grouping(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"gt(Expression, Expression)","url":"gt(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"gt(String, Object)","url":"gt(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"gte(Expression, Expression)","url":"gte(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"gte(String, Object)","url":"gte(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"hasActiveTransaction()"},{"p":"dev.morphia.query","c":"FieldEnd","l":"hasAllOf(Iterable<?>)","url":"hasAllOf(java.lang.Iterable)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"hasAllOf(Iterable<?>)","url":"hasAllOf(java.lang.Iterable)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"hasAnnotation(Class<? extends Annotation>)","url":"hasAnnotation(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"hasAnnotation(Class<? extends Annotation>)","url":"hasAnnotation(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"hasAnnotation(Class<? extends Annotation>)","url":"hasAnnotation(java.lang.Class)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"hasAnyOf(Iterable<?>)","url":"hasAnyOf(java.lang.Iterable)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"hasAnyOf(Iterable<?>)","url":"hasAnyOf(java.lang.Iterable)"},{"p":"dev.morphia","c":"Key","l":"hashCode()"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"hashCode()"},{"p":"dev.morphia.geo","c":"GeometryCollection","l":"hashCode()"},{"p":"dev.morphia.geo","c":"LineString","l":"hashCode()"},{"p":"dev.morphia.geo","c":"MultiLineString","l":"hashCode()"},{"p":"dev.morphia.geo","c":"MultiPoint","l":"hashCode()"},{"p":"dev.morphia.geo","c":"MultiPolygon","l":"hashCode()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"hashCode()"},{"p":"dev.morphia.geo","c":"Point","l":"hashCode()"},{"p":"dev.morphia.geo","c":"Polygon","l":"hashCode()"},{"p":"dev.morphia.mapping.codec","c":"BsonTypeMap","l":"hashCode()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"hashCode()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"hashCode()"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"hashCode()"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData","l":"hashCode()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"hashCode()"},{"p":"dev.morphia.query","c":"FindOptions","l":"hashCode()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"hashCode()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"hashCode()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"hasInterceptors()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"hasLifecycle(Class<? extends Annotation>)","url":"hasLifecycle(java.lang.Class)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"hasNoneOf(Iterable<?>)","url":"hasNoneOf(java.lang.Iterable)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"hasNoneOf(Iterable<?>)","url":"hasNoneOf(java.lang.Iterable)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"hasThisOne(Object)","url":"hasThisOne(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"hasThisOne(Object)","url":"hasThisOne(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"hint()"},{"p":"dev.morphia.query","c":"CountOptions","l":"hint(Bson)","url":"hint(org.bson.conversions.Bson)"},{"p":"dev.morphia.query","c":"FindOptions","l":"hint(DBObject)","url":"hint(com.mongodb.DBObject)"},{"p":"dev.morphia.query","c":"CountOptions","l":"hint(Document)","url":"hint(org.bson.Document)"},{"p":"dev.morphia.query","c":"FindOptions","l":"hint(Document)","url":"hint(org.bson.Document)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"hint(String)","url":"hint(java.lang.String)"},{"p":"dev.morphia.query","c":"CountOptions","l":"hint(String)","url":"hint(java.lang.String)"},{"p":"dev.morphia.query","c":"FindOptions","l":"hint(String)","url":"hint(java.lang.String)"},{"p":"dev.morphia.query","c":"CountOptions","l":"hintString(String)","url":"hintString(java.lang.String)"},{"p":"dev.morphia.query","c":"FindOptions","l":"hintString(String)","url":"hintString(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"histogram(boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"hour(Expression)","url":"hour(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"hour(Expression)","url":"hour(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"hour(int)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"id()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"id(Expression)","url":"id(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Group","l":"id(Group...)","url":"id(dev.morphia.aggregation.Group...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"id(String)","url":"id(java.lang.String)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"IdDoesNotMix","l":"IdDoesNotMix()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"identity()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"idFieldName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"idFieldName(String)","url":"idFieldName(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"idleConnections(boolean)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"idleCursors(boolean)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"idleSessions(boolean)"},{"p":"dev.morphia.annotations","c":"Reference","l":"idOnly()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ConditionalExpressions","l":"ifNull()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"IfNull()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"IGNORED_FIELDNAME"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"ignoreFinals(boolean)"},{"p":"dev.morphia.annotations","c":"Reference","l":"ignoreMissing()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"ignoreMissing()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"ignoreMissing(boolean)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"IN"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"in(Expression, Expression)","url":"in(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"in(Iterable<?>)","url":"in(java.lang.Iterable)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"in(Iterable<?>)","url":"in(java.lang.Iterable)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"in(String, Iterable<?>)","url":"in(java.lang.String,java.lang.Iterable)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"inc(String, Number)","url":"inc(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"inc(String, Number)","url":"inc(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"Updates","l":"inc(String, Number)","url":"inc(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"inc(String, Number)","url":"inc(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"inc(String)","url":"inc(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"inc(String)","url":"inc(java.lang.String)"},{"p":"dev.morphia.query","c":"Updates","l":"inc(String)","url":"inc(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"inc(String)","url":"inc(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"include(String, Expression)","url":"include(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"Projection","l":"include(String...)","url":"include(java.lang.String...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"include(String)","url":"include(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"includeArrayIndex(String)","url":"includeArrayIndex(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"includeLocs(String)","url":"includeLocs(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IndexExpression","l":"IndexExpression(String, Expression, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"IndexHelper","l":"IndexHelper(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"indexOfArray(Expression, Expression)","url":"indexOfArray(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"indexOfBytes(Expression, Expression)","url":"indexOfBytes(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"indexOfCP(Expression, Expression)","url":"indexOfCP(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"indexStats()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"indexStats()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"IndexStats","l":"IndexStats()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"IndexStatsCodec","l":"IndexStatsCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"INFO"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"AccumulatorExpression","l":"initArgs(List<Expression>)","url":"initArgs(java.util.List)"},{"p":"dev.morphia","c":"Datastore","l":"insert(List<T>, InsertManyOptions)","url":"insert(java.util.List,dev.morphia.InsertManyOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"insert(List<T>, InsertManyOptions)","url":"insert(java.util.List,dev.morphia.InsertManyOptions)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"insert(List<T>, InsertManyOptions)","url":"insert(java.util.List,dev.morphia.InsertManyOptions)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"insert(List<T>, InsertOptions)","url":"insert(java.util.List,dev.morphia.InsertOptions)"},{"p":"dev.morphia","c":"Datastore","l":"insert(List<T>)","url":"insert(java.util.List)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"insert(MongoCollection, T, InsertOneOptions)","url":"insert(com.mongodb.client.MongoCollection,T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"Datastore","l":"insert(T, InsertOneOptions)","url":"insert(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"insert(T, InsertOneOptions)","url":"insert(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"insert(T, InsertOneOptions)","url":"insert(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"insert(T, InsertOptions)","url":"insert(T,dev.morphia.InsertOptions)"},{"p":"dev.morphia","c":"Datastore","l":"insert(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"insert(T)"},{"p":"dev.morphia","c":"InsertManyOptions","l":"InsertManyOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"InsertManyOptions(InsertManyOptions)","url":"%3Cinit%3E(dev.morphia.InsertManyOptions)"},{"p":"dev.morphia","c":"InsertOneOptions","l":"InsertOneOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"InsertOneOptions","l":"InsertOneOptions(InsertOneOptions)","url":"%3Cinit%3E(dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"InsertOptions","l":"InsertOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"InstanceCreatorFactoryImpl","l":"InstanceCreatorFactoryImpl(EntityModel)","url":"%3Cinit%3E(dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"INT"},{"p":"dev.morphia.query","c":"Type","l":"INTEGER_32_BIT"},{"p":"dev.morphia.query","c":"Type","l":"INTEGER_64_BIT"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"interfaces()"},{"p":"dev.morphia.query","c":"FilterOperator","l":"INTERSECTS"},{"p":"dev.morphia.query","c":"FieldEnd","l":"intersects(Geometry, CoordinateReferenceSystem)","url":"intersects(com.mongodb.client.model.geojson.Geometry,com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"intersects(Geometry, CoordinateReferenceSystem)","url":"intersects(dev.morphia.geo.Geometry,dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"intersects(Geometry, CoordinateReferenceSystem)","url":"intersects(com.mongodb.client.model.geojson.Geometry,com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"intersects(Geometry)","url":"intersects(com.mongodb.client.model.geojson.Geometry)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"intersects(Geometry)","url":"intersects(dev.morphia.geo.Geometry)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"intersects(Geometry)","url":"intersects(com.mongodb.client.model.geojson.Geometry)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"into(Class<M>)","url":"into(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"into(String, String)","url":"into(java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"into(String)","url":"into(java.lang.String)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceProxy","l":"invoke(Object, Method, Object[])","url":"invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"isAbstract()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"isAllUsers()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isArray()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"isArray(Expression)","url":"isArray(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"isCacheClassLookups()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"isCausallyConsistent()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"isDiscriminatorEnabled()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"isEnablePolymorphicQueries()"},{"p":"dev.morphia.mapping.codec.references","c":"MorphiaProxy","l":"isFetched()"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceProxy","l":"isFetched()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"isIdleConnections()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"isIdleCursors()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"isIdleSessions()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"isIgnoreFinals()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"isInterface()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"isLocalOps()"},{"p":"dev.morphia.query","c":"FindOptions","l":"isLogQuery()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isMap()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"isMappable(Class<T>)","url":"isMappable(java.lang.Class)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"isMapped(Class)","url":"isMapped(java.lang.Class)"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"isMapSubPackages()"},{"p":"dev.morphia","c":"DeleteOptions","l":"isMulti()"},{"p":"dev.morphia","c":"UpdateOptions","l":"isMulti()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isMultipleValues()"},{"p":"dev.morphia.query","c":"FindOptions","l":"isNoCursorTimeout()"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"isNot()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"isNot()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"isNumber(Expression)","url":"isNumber(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToParts","l":"iso8601(boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IsoDates","l":"IsoDates(String, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"isoDayOfWeek(Expression)","url":"isoDayOfWeek(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"isoDayOfWeek(Expression)","url":"isoDayOfWeek(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"isoDayOfWeek(int)"},{"p":"dev.morphia.query","c":"FindOptions","l":"isOplogReplay()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"isOrdered()"},{"p":"dev.morphia","c":"InsertOptions","l":"isOrdered()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"isoWeek(Expression)","url":"isoWeek(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"isoWeek(Expression)","url":"isoWeek(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"isoWeek(int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"isoWeekYear(Expression)","url":"isoWeekYear(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"isoWeekYear(Expression)","url":"isoWeekYear(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"isoWeekYear(int)"},{"p":"dev.morphia.query","c":"FindOptions","l":"isPartial()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isReference()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"isResolved()"},{"p":"dev.morphia.query","c":"FindOptions","l":"isReturnKey()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isScalarValue()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isSet()"},{"p":"dev.morphia.query","c":"FindOptions","l":"isShowRecordId()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"isStoreEmpties()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"isStoreNulls()"},{"p":"dev.morphia.aggregation","c":"Projection","l":"isSuppressed()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"isTransient()"},{"p":"dev.morphia.mapping.codec.pojo","c":"WildCardTypeData","l":"isUpperBound()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"isValidating(boolean)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"isValidatingNames()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"iterator()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"iterator()"},{"p":"dev.morphia.query","c":"Query","l":"iterator()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"iterator(FindOptions)","url":"iterator(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"iterator(FindOptions)","url":"iterator(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Query","l":"iterator(FindOptions)","url":"iterator(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Type","l":"JAVASCRIPT"},{"p":"dev.morphia.query","c":"Type","l":"JAVASCRIPT_WITH_SCOPE"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"jsonSchema(Document)","url":"jsonSchema(org.bson.Document)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"jsonSchema(String, Object)","url":"jsonSchema(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"kebabCase()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"KEEP"},{"p":"dev.morphia","c":"Key","l":"Key()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"Key","l":"Key(Class<? extends T>, String, Object)","url":"%3Cinit%3E(java.lang.Class,java.lang.String,java.lang.Object)"},{"p":"dev.morphia","c":"Key","l":"Key(Class<? extends T>, String)","url":"%3Cinit%3E(java.lang.Class,java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"key(String)","url":"key(java.lang.String)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"keys()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"keys()"},{"p":"dev.morphia.query","c":"Query","l":"keys()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"keys(FindOptions)","url":"keys(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"keys(FindOptions)","url":"keys(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Query","l":"keys(FindOptions)","url":"keys(dev.morphia.query.FindOptions)"},{"p":"dev.morphia.query","c":"Projection","l":"knownFields()"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"language()"},{"p":"dev.morphia.query.experimental.filters","c":"TextSearchFilter","l":"language(String)","url":"language(java.lang.String)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"languageOverride()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"last(Expression)","url":"last(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Group","l":"last(String)","url":"last(java.lang.String)"},{"p":"dev.morphia.geo","c":"PointBuilder","l":"latitude(double)"},{"p":"dev.morphia.annotations","c":"Reference","l":"lazy()"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"LazyReferenceMissingDependencies","l":"LazyReferenceMissingDependencies()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"LazyReferenceOnArray","l":"LazyReferenceOnArray()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"MapperOptions","l":"legacy()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"LegacyQuery(Datastore, String, Class<T>)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.String,java.lang.Class)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"LegacyQuery(Datastore)","url":"%3Cinit%3E(dev.morphia.Datastore)"},{"p":"dev.morphia.mapping.codec","c":"LegacyQueryCodec","l":"LegacyQueryCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"LegacyQueryFactory","l":"LegacyQueryFactory()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"FilterOperator","l":"LESS_THAN"},{"p":"dev.morphia.query","c":"FilterOperator","l":"LESS_THAN_OR_EQUAL"},{"p":"dev.morphia.query","c":"FieldEnd","l":"lessThan(Object)","url":"lessThan(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"lessThan(Object)","url":"lessThan(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"lessThanOrEq(Object)","url":"lessThanOrEq(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"lessThanOrEq(Object)","url":"lessThanOrEq(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"VariableExpressions","l":"let(Expression)","url":"let(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"let(String, Expression)","url":"let(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"let(String, Expression)","url":"let(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"LetExpression","l":"LetExpression(Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"Validation","l":"level()"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"level()"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"level(ValidationLevel)","url":"level(com.mongodb.client.model.ValidationLevel)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"limit(int)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"limit(int)"},{"p":"dev.morphia.query","c":"CountOptions","l":"limit(int)"},{"p":"dev.morphia.query","c":"FindOptions","l":"limit(int)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"limit(long)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"limit(long)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Limit","l":"Limit(long)","url":"%3Cinit%3E(long)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"LimitCodec","l":"LimitCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"LINE_STRING"},{"p":"dev.morphia.geo","c":"GeoJson","l":"lineString(Point...)","url":"lineString(dev.morphia.geo.Point...)"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystemType","l":"LINK"},{"p":"dev.morphia.aggregation","c":"Projection","l":"list(Object...)","url":"list(java.lang.Object...)"},{"p":"dev.morphia.mapping.experimental","c":"ListReference","l":"ListReference(Datastore, EntityModel, List)","url":"%3Cinit%3E(dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModel,java.util.List)"},{"p":"dev.morphia.mapping.experimental","c":"ListReference","l":"ListReference(List<T>)","url":"%3Cinit%3E(java.util.List)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"Expressions","l":"literal(Object)","url":"literal(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"LiteralExpression","l":"LiteralExpression(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"ln(Expression)","url":"ln(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"Collation","l":"locale()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"locale()"},{"p":"dev.morphia.mapping.codec","c":"LocaleCodec","l":"LocaleCodec()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"localField(String)","url":"localField(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"localOps(boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"log(Expression, Expression)","url":"log(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"log10(Expression)","url":"log10(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FindOptions","l":"logQuery()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"LONG"},{"p":"dev.morphia.geo","c":"PointBuilder","l":"longitude(double)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"Lookup(Class<?>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"lookup(Lookup)","url":"lookup(dev.morphia.aggregation.experimental.stages.Lookup)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"lookup(Lookup)","url":"lookup(dev.morphia.aggregation.experimental.stages.Lookup)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"lookup(String, String, String, String)","url":"lookup(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"lookup(String, String, String, String)","url":"lookup(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"dev.morphia.mapping","c":"DiscriminatorLookup","l":"lookup(String)","url":"lookup(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Lookup","l":"Lookup(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"LookupCodec","l":"LookupCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"lowerCase()"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"lowerClassName()"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"lowerSimpleName()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"lt(Expression, Expression)","url":"lt(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"lt(String, Object)","url":"lt(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"lte(Expression, Expression)","url":"lte(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"lte(String, Object)","url":"lte(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"ltrim(Expression)","url":"ltrim(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"map(Class...)","url":"map(java.lang.Class...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"map(Expression, Expression)","url":"map(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"map(List<Class>)","url":"map(java.util.List)"},{"p":"dev.morphia.query","c":"Projection","l":"map(Mapper, Class<?>)","url":"map(dev.morphia.mapping.Mapper,java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MapExpression","l":"MapExpression(Expression, Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"mapExternal(A, Class)","url":"mapExternal(A,java.lang.Class)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"MapKeyTypeConstraint","l":"MapKeyTypeConstraint()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"mapPackage(String)","url":"mapPackage(java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"mapPackageFromClass(Class)","url":"mapPackageFromClass(java.lang.Class)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"mappedName()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"mappedName(String)","url":"mappedName(java.lang.String)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"Mapper(Datastore, CodecRegistry, MapperOptions)","url":"%3Cinit%3E(dev.morphia.Datastore,org.bson.codecs.configuration.CodecRegistry,dev.morphia.mapping.MapperOptions)"},{"p":"dev.morphia.mapping","c":"MappingException","l":"MappingException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"dev.morphia.mapping","c":"MappingException","l":"MappingException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.mapping.validation","c":"MappingValidator","l":"MappingValidator(MorphiaInstanceCreator)","url":"%3Cinit%3E(dev.morphia.mapping.codec.MorphiaInstanceCreator)"},{"p":"dev.morphia.mapping.experimental","c":"MapReference","l":"MapReference(Datastore, Map<String, Object>, EntityModel)","url":"%3Cinit%3E(dev.morphia.Datastore,java.util.Map,dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"mapSubPackages(boolean)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"match(Filter...)","url":"match(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"match(Filter...)","url":"match(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Match","l":"Match(Filter...)","url":"%3Cinit%3E(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"match(Query)","url":"match(dev.morphia.query.Query)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"match(Query)","url":"match(dev.morphia.query.Query)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"MatchCodec","l":"MatchCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"matches(String)","url":"matches(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MathExpression","l":"MathExpression(String, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MathExpression","l":"MathExpression(String, List<Expression>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"MathExpressions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"Type","l":"MAX_KEY"},{"p":"dev.morphia.query","c":"FindOptions","l":"max(DBObject)","url":"max(com.mongodb.DBObject)"},{"p":"dev.morphia.query","c":"FindOptions","l":"max(Document)","url":"max(org.bson.Document)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"max(Expression)","url":"max(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"max(String, Number)","url":"max(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"max(String, Number)","url":"max(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"Updates","l":"max(String, Number)","url":"max(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"max(String, Number)","url":"max(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.aggregation","c":"Group","l":"max(String)","url":"max(java.lang.String)"},{"p":"dev.morphia.query","c":"FindOptions","l":"maxAwaitTime(long, TimeUnit)","url":"maxAwaitTime(long,java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"maxDepth(Integer)","url":"maxDepth(java.lang.Integer)"},{"p":"dev.morphia.query.experimental.filters","c":"NearFilter","l":"maxDistance(Double)","url":"maxDistance(java.lang.Double)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"maxDistance(Number)","url":"maxDistance(java.lang.Number)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"maxDistance(String, Object)","url":"maxDistance(java.lang.String,java.lang.Object)"},{"p":"dev.morphia","c":"ModifyOptions","l":"maxTime(long, TimeUnit)","url":"maxTime(long,java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.query","c":"CountOptions","l":"maxTime(long, TimeUnit)","url":"maxTime(long,java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"maxTime(long, TimeUnit)","url":"maxTime(long,java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.query","c":"FindOptions","l":"maxTime(long, TimeUnit)","url":"maxTime(long,java.util.concurrent.TimeUnit)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"maxTimeMS()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"maxTimeMS(long)"},{"p":"dev.morphia.annotations","c":"Collation","l":"maxVariable()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"maxVariable()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"Merge()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"Merge(Class<M>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"merge(Merge<M>, AggregationOptions)","url":"merge(dev.morphia.aggregation.experimental.stages.Merge,dev.morphia.aggregation.experimental.AggregationOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"merge(Merge<M>, AggregationOptions)","url":"merge(dev.morphia.aggregation.experimental.stages.Merge,dev.morphia.aggregation.experimental.AggregationOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"merge(Merge<M>)","url":"merge(dev.morphia.aggregation.experimental.stages.Merge)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"merge(Merge<M>)","url":"merge(dev.morphia.aggregation.experimental.stages.Merge)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"Merge(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"Merge(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia","c":"Datastore","l":"merge(T, InsertOneOptions)","url":"merge(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"merge(T, InsertOneOptions)","url":"merge(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"merge(T, InsertOneOptions)","url":"merge(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"Datastore","l":"merge(T, WriteConcern)","url":"merge(T,com.mongodb.WriteConcern)"},{"p":"dev.morphia","c":"Datastore","l":"merge(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"merge(T)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"MergeCodec","l":"MergeCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ObjectExpressions","l":"mergeObjects()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ObjectExpressions.MergeObjects","l":"MergeObjects()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.Direction","l":"META"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"Expressions","l":"meta()"},{"p":"dev.morphia.query","c":"Meta","l":"Meta(Meta.MetaDataKeyword, String)","url":"%3Cinit%3E(dev.morphia.query.Meta.MetaDataKeyword,java.lang.String)"},{"p":"dev.morphia.query","c":"Meta","l":"Meta(Meta.MetaDataKeyword)","url":"%3Cinit%3E(dev.morphia.query.Meta.MetaDataKeyword)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort","l":"meta(String)","url":"meta(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"MetaExpression","l":"MetaExpression()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"millisecond(Expression)","url":"millisecond(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"millisecond(int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"milliseconds(Expression)","url":"milliseconds(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"Type","l":"MIN_KEY"},{"p":"dev.morphia.query","c":"FindOptions","l":"min(DBObject)","url":"min(com.mongodb.DBObject)"},{"p":"dev.morphia.query","c":"FindOptions","l":"min(Document)","url":"min(org.bson.Document)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"min(Expression)","url":"min(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"min(String, Number)","url":"min(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"min(String, Number)","url":"min(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query","c":"Updates","l":"min(String, Number)","url":"min(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"min(String, Number)","url":"min(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.aggregation","c":"Group","l":"min(String)","url":"min(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"NearFilter","l":"minDistance(Double)","url":"minDistance(java.lang.Double)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"minDistance(Number)","url":"minDistance(java.lang.Number)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"minDistance(String, Object)","url":"minDistance(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"MINOR"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"minute(Expression)","url":"minute(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"minute(Expression)","url":"minute(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"minute(int)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"MOD"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"mod(Expression, Expression)","url":"mod(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"mod(long, long)","url":"mod(long,long)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"mod(long, long)","url":"mod(long,long)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"mod(Object, Object)","url":"mod(java.lang.Object,java.lang.Object)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"mod(String, long, long)","url":"mod(java.lang.String,long,long)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"modify(UpdateOperations<T>)","url":"modify(dev.morphia.query.UpdateOperations)"},{"p":"dev.morphia.query","c":"Query","l":"modify(UpdateOperations<T>)","url":"modify(dev.morphia.query.UpdateOperations)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"modify(UpdateOperator, UpdateOperator...)","url":"modify(dev.morphia.query.experimental.updates.UpdateOperator,dev.morphia.query.experimental.updates.UpdateOperator...)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"modify(UpdateOperator, UpdateOperator...)","url":"modify(dev.morphia.query.experimental.updates.UpdateOperator,dev.morphia.query.experimental.updates.UpdateOperator...)"},{"p":"dev.morphia.query","c":"Query","l":"modify(UpdateOperator, UpdateOperator...)","url":"modify(dev.morphia.query.experimental.updates.UpdateOperator,dev.morphia.query.experimental.updates.UpdateOperator...)"},{"p":"dev.morphia","c":"ModifyOptions","l":"ModifyOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"month(Expression)","url":"month(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"month(Expression)","url":"month(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"month(int)"},{"p":"dev.morphia.mapping.codec.pojo","c":"MorphiaCodec","l":"MorphiaCodec(Datastore, EntityModel, List<PropertyCodecProvider>, DiscriminatorLookup, CodecRegistry)","url":"%3Cinit%3E(dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModel,java.util.List,dev.morphia.mapping.DiscriminatorLookup,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaCodecProvider","l":"MorphiaCodecProvider(Mapper, Datastore)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper,dev.morphia.Datastore)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaCollectionPropertyCodecProvider","l":"MorphiaCollectionPropertyCodecProvider()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"MorphiaDefaultsConvention","l":"MorphiaDefaultsConvention()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaLocalTimeCodec","l":"MorphiaLocalTimeCodec()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.codec","c":"MorphiaPropertySerialization","l":"MorphiaPropertySerialization(MapperOptions, FieldModelBuilder)","url":"%3Cinit%3E(dev.morphia.mapping.MapperOptions,dev.morphia.mapping.codec.pojo.FieldModelBuilder)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"MorphiaQuery(Datastore, Class<T>, Document)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.Class,org.bson.Document)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"MorphiaQuery(Datastore, String, Class<T>)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.String,java.lang.Class)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"MorphiaQuery(Datastore)","url":"%3Cinit%3E(dev.morphia.Datastore)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaQueryCodec","l":"MorphiaQueryCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReferenceCodec","l":"MorphiaReferenceCodec(Datastore, Field, TypeData)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.reflect.Field,dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"MorphiaSessionImpl(ClientSession, MongoClient, MongoDatabase, Mapper, QueryFactory)","url":"%3Cinit%3E(com.mongodb.client.ClientSession,com.mongodb.client.MongoClient,com.mongodb.client.MongoDatabase,dev.morphia.mapping.Mapper,dev.morphia.query.QueryFactory)"},{"p":"dev.morphia.mapping.codec","c":"MorphiaTypesCodecProvider","l":"MorphiaTypesCodecProvider(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"mul(String, Number)","url":"mul(java.lang.String,java.lang.Number)"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"MULTI_LINE_STRING"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"MULTI_POINT"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"MULTI_POLYGON"},{"p":"dev.morphia","c":"DeleteOptions","l":"multi(boolean)"},{"p":"dev.morphia","c":"UpdateOptions","l":"multi(boolean)"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"multiline()"},{"p":"dev.morphia.geo","c":"GeoJson","l":"multiLineString(LineString...)","url":"multiLineString(dev.morphia.geo.LineString...)"},{"p":"dev.morphia.mapping.validation.classrules","c":"MultipleId","l":"MultipleId()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping.validation.classrules","c":"MultipleVersions","l":"MultipleVersions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"multiply(Expression, Expression...)","url":"multiply(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"multiply(Object...)","url":"multiply(java.lang.Object...)"},{"p":"dev.morphia.geo","c":"GeoJson","l":"multiPoint(Point...)","url":"multiPoint(dev.morphia.geo.Point...)"},{"p":"dev.morphia.geo","c":"GeoJson","l":"multiPolygon(Polygon...)","url":"multiPolygon(dev.morphia.geo.Polygon...)"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystemType","l":"NAME"},{"p":"dev.morphia.mapping.codec.reader","c":"NameState","l":"NAME"},{"p":"dev.morphia.mapping.codec.reader","c":"ValueState","l":"NAME"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"name()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"name()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystemConverter","l":"NamedCoordinateReferenceSystemConverter()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"NamingStrategy()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"Sort","l":"naturalAscending()"},{"p":"dev.morphia.query","c":"Sort","l":"naturalDescending()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ComparisonExpressions","l":"ne(Expression, Expression)","url":"ne(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"ne(String, Object)","url":"ne(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"NEAR"},{"p":"dev.morphia.query","c":"FilterOperator","l":"NEAR_SPHERE"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(double, double, boolean)","url":"near(double,double,boolean)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"near(double, double, boolean)","url":"near(double,double,boolean)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(double, double, double, boolean)","url":"near(double,double,double,boolean)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"near(double, double, double, boolean)","url":"near(double,double,double,boolean)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(double, double, double)","url":"near(double,double,double)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"near(double, double, double)","url":"near(double,double,double)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(double, double)","url":"near(double,double)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"near(double, double)","url":"near(double,double)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(Point, Double, Double)","url":"near(com.mongodb.client.model.geojson.Point,java.lang.Double,java.lang.Double)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(Point, Double, Double)","url":"near(dev.morphia.geo.Point,java.lang.Double,java.lang.Double)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"near(Point, Double, Double)","url":"near(com.mongodb.client.model.geojson.Point,java.lang.Double,java.lang.Double)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(Point)","url":"near(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"near(Point)","url":"near(dev.morphia.geo.Point)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"near(Point)","url":"near(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"near(String, Point)","url":"near(java.lang.String,com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"nearSphere(Point, Double, Double)","url":"nearSphere(com.mongodb.client.model.geojson.Point,java.lang.Double,java.lang.Double)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"nearSphere(Point, Double, Double)","url":"nearSphere(dev.morphia.geo.Point,java.lang.Double,java.lang.Double)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"nearSphere(Point, Double, Double)","url":"nearSphere(com.mongodb.client.model.geojson.Point,java.lang.Double,java.lang.Double)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"nearSphere(Point)","url":"nearSphere(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"nearSphere(Point)","url":"nearSphere(dev.morphia.geo.Point)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"nearSphere(Point)","url":"nearSphere(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"nearSphere(String, Point)","url":"nearSphere(java.lang.String,com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"newInstance(Field)","url":"newInstance(java.lang.reflect.Field)"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"newInstance(Type, Class<T>)","url":"newInstance(java.lang.reflect.Type,java.lang.Class)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"nin(String, Object)","url":"nin(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.mapping","c":"NoArgCreator","l":"NoArgCreator(Constructor<?>)","url":"%3Cinit%3E(java.lang.reflect.Constructor)"},{"p":"dev.morphia.query","c":"FindOptions","l":"noCursorTimeout(boolean)"},{"p":"dev.morphia.mapping.validation.classrules","c":"NoId","l":"NoId()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"nor(Filter...)","url":"nor(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.annotations","c":"Collation","l":"normalization()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"normalization()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"normalize(TypeData<?>)","url":"normalize(dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"NOT"},{"p":"dev.morphia.query","c":"FilterOperator","l":"NOT_EQUAL"},{"p":"dev.morphia.query","c":"FilterOperator","l":"NOT_IN"},{"p":"dev.morphia.query","c":"FieldEnd","l":"not()"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"not()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"not()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"BooleanExpressions","l":"not(Expression)","url":"not(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"notEqual(Object)","url":"notEqual(java.lang.Object)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"notEqual(Object)","url":"notEqual(java.lang.Object)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"notifyMessageSent()"},{"p":"dev.morphia.query","c":"FieldEnd","l":"notIn(Iterable<?>)","url":"notIn(java.lang.Iterable)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"notIn(Iterable<?>)","url":"notIn(java.lang.Iterable)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"NOW"},{"p":"dev.morphia.query","c":"Type","l":"NULL"},{"p":"dev.morphia.annotations","c":"Collation","l":"numericOrdering()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"numericOrdering()"},{"p":"dev.morphia.query","c":"Type","l":"OBJECT"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"OBJECT_ID"},{"p":"dev.morphia.query","c":"Type","l":"OBJECT_ID"},{"p":"dev.morphia.mapping.codec","c":"ObjectCodec","l":"ObjectCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"objectFactory(MorphiaInstanceCreator)","url":"objectFactory(dev.morphia.mapping.codec.MorphiaInstanceCreator)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"objectToArray(Expression)","url":"objectToArray(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"Expressions","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AddFields","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CurrentOp","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Facet","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"IndexStats","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"PlanCacheStats","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"of()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Group","l":"of(Group.GroupId)","url":"of(dev.morphia.aggregation.experimental.stages.Group.GroupId)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Limit","l":"of(long)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sample","l":"of(long)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Skip","l":"of(long)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort","l":"on()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Redact","l":"on(Expression)","url":"on(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"SortByCount","l":"on(Expression)","url":"on(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Match","l":"on(Filter...)","url":"on(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"on(String, String...)","url":"on(java.lang.String,java.lang.String...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"on(String)","url":"on(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"on(T)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"ONE_TWO_FIVE"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertExpression","l":"onError(Expression)","url":"onError(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"onError(Expression)","url":"onError(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"onError(String)","url":"onError(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertExpression","l":"onNull(Expression)","url":"onNull(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"onNull(Expression)","url":"onNull(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"onNull(Expression)","url":"onNull(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"onNull(String)","url":"onNull(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"onNull(String)","url":"onNull(java.lang.String)"},{"p":"dev.morphia.query","c":"OperationTarget","l":"OperationTarget(PathTarget, Object)","url":"%3Cinit%3E(dev.morphia.internal.PathTarget,java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"operator()"},{"p":"dev.morphia.query","c":"FindOptions","l":"oplogReplay(boolean)"},{"p":"dev.morphia.annotations","c":"Index","l":"options()"},{"p":"dev.morphia.annotations","c":"Indexed","l":"options()"},{"p":"dev.morphia.annotations","c":"Text","l":"options()"},{"p":"dev.morphia.annotations","c":"TextBuilder","l":"options()"},{"p":"dev.morphia.query","c":"PushOptions","l":"options()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RegexExpression","l":"options(String)","url":"options(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"options(String)","url":"options(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"optionsPresent()"},{"p":"dev.morphia.query","c":"CriteriaJoin","l":"OR"},{"p":"dev.morphia.query","c":"CriteriaContainer","l":"or(Criteria...)","url":"or(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"or(Criteria...)","url":"or(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"or(Criteria...)","url":"or(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.query","c":"Query","l":"or(Criteria...)","url":"or(dev.morphia.query.Criteria...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"BooleanExpressions","l":"or(Expression, Expression...)","url":"or(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"or(Filter...)","url":"or(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"or(String, int)","url":"or(java.lang.String,int)"},{"p":"dev.morphia","c":"InsertManyOptions","l":"ordered(boolean)"},{"p":"dev.morphia","c":"InsertOptions","l":"ordered(boolean)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Out","l":"Out()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"out(Class<U>, AggregationOptions)","url":"out(java.lang.Class,com.mongodb.AggregationOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"out(Class<U>, AggregationOptions)","url":"out(java.lang.Class,com.mongodb.AggregationOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"out(Class<U>)","url":"out(java.lang.Class)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"out(Class<U>)","url":"out(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"out(Out<O>, AggregationOptions)","url":"out(dev.morphia.aggregation.experimental.stages.Out,dev.morphia.aggregation.experimental.AggregationOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"out(Out<O>, AggregationOptions)","url":"out(dev.morphia.aggregation.experimental.stages.Out,dev.morphia.aggregation.experimental.AggregationOptions)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"out(Out<O>)","url":"out(dev.morphia.aggregation.experimental.stages.Out)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"out(Out<O>)","url":"out(dev.morphia.aggregation.experimental.stages.Out)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"out(String, Class<U>, AggregationOptions)","url":"out(java.lang.String,java.lang.Class,com.mongodb.AggregationOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"out(String, Class<U>, AggregationOptions)","url":"out(java.lang.String,java.lang.Class,com.mongodb.AggregationOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"out(String, Class<U>)","url":"out(java.lang.String,java.lang.Class)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"out(String, Class<U>)","url":"out(java.lang.String,java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"OutCodec","l":"OutCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query","c":"BucketAutoOptions","l":"output(String)","url":"output(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketOptions","l":"output(String)","url":"output(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"AutoBucket","l":"outputField(String, Expression)","url":"outputField(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Bucket","l":"outputField(String, Expression)","url":"outputField(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.OutputOperation","l":"OutputOperation(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketOptions.OutputOperation","l":"OutputOperation(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.query","c":"FindOptions","l":"partial(boolean)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"partialFilter()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"path(Mapper)","url":"path(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RegexExpression","l":"pattern(Pattern)","url":"pattern(java.util.regex.Pattern)"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"pattern(Pattern)","url":"pattern(java.util.regex.Pattern)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RegexExpression","l":"pattern(String)","url":"pattern(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"pattern(String)","url":"pattern(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"peekBinarySize()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"peekBinarySubType()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"pipe(BsonReader)","url":"pipe(org.bson.BsonReader)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"PipelineField","l":"PipelineField(String, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"planCacheStats()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"planCacheStats()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"PlanCacheStats","l":"PlanCacheStats()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"PlanCacheStatsCodec","l":"PlanCacheStatsCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"POINT"},{"p":"dev.morphia.geo","c":"PointBuilder","l":"pointBuilder()"},{"p":"dev.morphia.geo","c":"PointBuilder","l":"PointBuilder()","url":"%3Cinit%3E()"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"POLYGON"},{"p":"dev.morphia.geo","c":"GeoJson","l":"polygon(LineString, LineString...)","url":"polygon(dev.morphia.geo.LineString,dev.morphia.geo.LineString...)"},{"p":"dev.morphia.geo","c":"GeoJson","l":"polygon(Point...)","url":"polygon(dev.morphia.geo.Point...)"},{"p":"dev.morphia.query","c":"Shape","l":"polygon(Point...)","url":"polygon(com.mongodb.client.model.geojson.Point...)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"polygon(String, Point...)","url":"polygon(java.lang.String,com.mongodb.client.model.geojson.Point...)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"pop(String)","url":"pop(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"PopOperator","l":"PopOperator(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.query","c":"PushOptions","l":"position(int)"},{"p":"dev.morphia.query.experimental.updates","c":"PushOperator","l":"position(int)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SliceExpression","l":"position(Integer)","url":"position(java.lang.Integer)"},{"p":"dev.morphia","c":"EntityInterceptor","l":"postLoad(Object, Document, Mapper)","url":"postLoad(java.lang.Object,org.bson.Document,dev.morphia.mapping.Mapper)"},{"p":"dev.morphia","c":"EntityInterceptor","l":"postPersist(Object, Document, Mapper)","url":"postPersist(java.lang.Object,org.bson.Document,dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"pow(Expression, Expression)","url":"pow(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"POWERSOF2"},{"p":"dev.morphia","c":"EntityInterceptor","l":"preLoad(Object, Document, Mapper)","url":"preLoad(java.lang.Object,org.bson.Document,dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"prepare(MongoCollection<C>)","url":"prepare(com.mongodb.client.MongoCollection)"},{"p":"dev.morphia","c":"EntityInterceptor","l":"prePersist(Object, Document, Mapper)","url":"prePersist(java.lang.Object,org.bson.Document,dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"preserveNullAndEmptyArrays(Boolean)","url":"preserveNullAndEmptyArrays(java.lang.Boolean)"},{"p":"dev.morphia.mapping.codec","c":"PrimitiveCodecRegistry","l":"PrimitiveCodecRegistry(CodecRegistry)","url":"%3Cinit%3E(org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"processId(Object, Mapper, DecoderContext)","url":"processId(java.lang.Object,dev.morphia.mapping.Mapper,org.bson.codecs.DecoderContext)"},{"p":"dev.morphia.query","c":"Projection","l":"project(Meta)","url":"project(dev.morphia.query.Meta)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"project(Projection...)","url":"project(dev.morphia.aggregation.Projection...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"project(Projection...)","url":"project(dev.morphia.aggregation.Projection...)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"project(Projection)","url":"project(dev.morphia.aggregation.experimental.stages.Projection)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"project(Projection)","url":"project(dev.morphia.aggregation.experimental.stages.Projection)"},{"p":"dev.morphia.query","c":"Projection","l":"project(String, ArraySlice)","url":"project(java.lang.String,dev.morphia.query.ArraySlice)"},{"p":"dev.morphia.query","c":"FindOptions","l":"projection()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"Projection()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"ModifyOptions","l":"projection(Bson)","url":"projection(org.bson.conversions.Bson)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"projection(Bson)","url":"projection(org.bson.conversions.Bson)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"projection(String, Projection, Projection...)","url":"projection(java.lang.String,dev.morphia.aggregation.Projection,dev.morphia.aggregation.Projection...)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"projection(String, String)","url":"projection(java.lang.String,java.lang.String)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"projection(String)","url":"projection(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ProjectionCodec","l":"ProjectionCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodec","l":"PropertyCodec(Datastore, Field, TypeData)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.reflect.Field,dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.mapping.codec","c":"PropertyCodecRegistryImpl","l":"PropertyCodecRegistryImpl(Codec<?>, CodecRegistry, List<PropertyCodecProvider>)","url":"%3Cinit%3E(org.bson.codecs.Codec,org.bson.codecs.configuration.CodecRegistry,java.util.List)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"PRUNE"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"pull(String, Filter)","url":"pull(java.lang.String,dev.morphia.query.experimental.filters.Filter)"},{"p":"dev.morphia.query","c":"Updates","l":"pull(String, Object)","url":"pull(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"pullAll(String, List<?>)","url":"pullAll(java.lang.String,java.util.List)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"pullAll(String, List<?>)","url":"pullAll(java.lang.String,java.util.List)"},{"p":"dev.morphia.query.experimental.updates","c":"PullOperator","l":"PullOperator(String, Filter)","url":"%3Cinit%3E(java.lang.String,dev.morphia.query.experimental.filters.Filter)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"push()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Push","l":"Push()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"push(Expression)","url":"push(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"push(String, List<?>, PushOptions)","url":"push(java.lang.String,java.util.List,dev.morphia.query.PushOptions)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"push(String, List<?>, PushOptions)","url":"push(java.lang.String,java.util.List,dev.morphia.query.PushOptions)"},{"p":"dev.morphia.query","c":"Updates","l":"push(String, List<?>, PushOptions)","url":"push(java.lang.String,java.util.List,dev.morphia.query.PushOptions)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"push(String, List<?>)","url":"push(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"push(String, List<?>)","url":"push(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"Updates","l":"push(String, List<?>)","url":"push(java.lang.String,java.util.List)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"push(String, List<?>)","url":"push(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"push(String, Object, PushOptions)","url":"push(java.lang.String,java.lang.Object,dev.morphia.query.PushOptions)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"push(String, Object, PushOptions)","url":"push(java.lang.String,java.lang.Object,dev.morphia.query.PushOptions)"},{"p":"dev.morphia.query","c":"Updates","l":"push(String, Object, PushOptions)","url":"push(java.lang.String,java.lang.Object,dev.morphia.query.PushOptions)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"push(String, Object)","url":"push(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"push(String, Object)","url":"push(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"push(String, Object)","url":"push(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"push(String, Object)","url":"push(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation","c":"Group","l":"push(String)","url":"push(java.lang.String)"},{"p":"dev.morphia.query","c":"PushOptions","l":"PushOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"put(String, Object)","url":"put(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"query(Filter...)","url":"query(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia","c":"AdvancedDatastore","l":"queryByExample(String, T)","url":"queryByExample(java.lang.String,T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"queryByExample(String, T)","url":"queryByExample(java.lang.String,T)"},{"p":"dev.morphia","c":"Datastore","l":"queryByExample(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"queryByExample(T)"},{"p":"dev.morphia.query","c":"QueryException","l":"QueryException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"dev.morphia.query","c":"QueryException","l":"QueryException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"queryFactory(QueryFactory)","url":"queryFactory(dev.morphia.query.QueryFactory)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"R10"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"R20"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"R40"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"R5"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"R80"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"radiansToDegrees(Expression)","url":"radiansToDegrees(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"range(int, int)","url":"range(int,int)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RangeExpression","l":"RangeExpression(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readBinaryData()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readBinaryData(String)","url":"readBinaryData(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readBoolean()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readBoolean(String)","url":"readBoolean(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readBsonType()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"readConcern()"},{"p":"dev.morphia.query","c":"CountOptions","l":"readConcern()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"readConcern(ReadConcern)","url":"readConcern(com.mongodb.ReadConcern)"},{"p":"dev.morphia.query","c":"CountOptions","l":"readConcern(ReadConcern)","url":"readConcern(com.mongodb.ReadConcern)"},{"p":"dev.morphia.query","c":"FindOptions","l":"readConcern(ReadConcern)","url":"readConcern(com.mongodb.ReadConcern)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDateTime()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDateTime(String)","url":"readDateTime(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDBPointer()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDBPointer(String)","url":"readDBPointer(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDecimal128()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDecimal128(String)","url":"readDecimal128(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDouble()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readDouble(String)","url":"readDouble(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readEndArray()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readEndDocument()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readInt32()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readInt32(String)","url":"readInt32(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readInt64()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readInt64(String)","url":"readInt64(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readJavaScript()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readJavaScript(String)","url":"readJavaScript(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readJavaScriptWithScope()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readJavaScriptWithScope(String)","url":"readJavaScriptWithScope(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readMaxKey()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readMaxKey(String)","url":"readMaxKey(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readMinKey()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readMinKey(String)","url":"readMinKey(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readName()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readName(String)","url":"readName(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readNull()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readNull(String)","url":"readNull(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readObjectId()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readObjectId(String)","url":"readObjectId(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"readPreference()"},{"p":"dev.morphia.query","c":"CountOptions","l":"readPreference()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"readPreference(ReadPreference)","url":"readPreference(com.mongodb.ReadPreference)"},{"p":"dev.morphia.query","c":"CountOptions","l":"readPreference(ReadPreference)","url":"readPreference(com.mongodb.ReadPreference)"},{"p":"dev.morphia.query","c":"FindOptions","l":"readPreference(ReadPreference)","url":"readPreference(com.mongodb.ReadPreference)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readRegularExpression()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readRegularExpression(String)","url":"readRegularExpression(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readStartArray()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readStartDocument()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readString()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readString(String)","url":"readString(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readSymbol()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readSymbol(String)","url":"readSymbol(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readTimestamp()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readTimestamp(String)","url":"readTimestamp(java.lang.String)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readUndefined()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"readUndefined(String)","url":"readUndefined(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Redact","l":"Redact()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"redact(Redact)","url":"redact(dev.morphia.aggregation.experimental.stages.Redact)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"redact(Redact)","url":"redact(dev.morphia.aggregation.experimental.stages.Redact)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"RedactCodec","l":"RedactCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"reduce(Expression, Expression, Expression)","url":"reduce(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ReduceExpression","l":"ReduceExpression(Expression, Expression, Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceCodec","l":"ReferenceCodec(Datastore, Field, TypeData)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.reflect.Field,dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.mapping.lazy.proxy","c":"ReferenceException","l":"ReferenceException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"ReferenceToUnidentifiable","l":"ReferenceToUnidentifiable()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"Datastore","l":"refresh(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"refresh(T)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"refresh(T)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"regex(String)","url":"regex(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RegexExpression","l":"RegexExpression(String, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"regexFind(Expression)","url":"regexFind(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"regexFindAll(Expression)","url":"regexFindAll(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"regexMatch(Expression)","url":"regexMatch(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.codec","c":"Conversions","l":"register(Class<S>, Class<T>, Function<S, T>, String)","url":"register(java.lang.Class,java.lang.Class,java.util.function.Function,java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"Conversions","l":"register(Class<S>, Class<T>, Function<S, T>)","url":"register(java.lang.Class,java.lang.Class,java.util.function.Function)"},{"p":"dev.morphia.query","c":"Type","l":"REGULAR_EXPRESSION"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"REMOVE"},{"p":"dev.morphia.query","c":"CriteriaContainer","l":"remove(Criteria)","url":"remove(dev.morphia.query.Criteria)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"remove(Criteria)","url":"remove(dev.morphia.query.Criteria)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"remove(Criteria)","url":"remove(dev.morphia.query.Criteria)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"remove(String, boolean)","url":"remove(java.lang.String,boolean)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"removeAll(String, List<?>)","url":"removeAll(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"removeAll(String, List<?>)","url":"removeAll(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"Updates","l":"removeAll(String, List<?>)","url":"removeAll(java.lang.String,java.util.List)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"removeAll(String, Object)","url":"removeAll(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"removeAll(String, Object)","url":"removeAll(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"removeAll(String, Object)","url":"removeAll(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"PopOperator","l":"removeFirst()"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"removeFirst(String)","url":"removeFirst(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"removeFirst(String)","url":"removeFirst(java.lang.String)"},{"p":"dev.morphia.query","c":"Updates","l":"removeFirst(String)","url":"removeFirst(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"removeLast(String)","url":"removeLast(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"removeLast(String)","url":"removeLast(java.lang.String)"},{"p":"dev.morphia.query","c":"Updates","l":"removeLast(String)","url":"removeLast(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"rename(String, String)","url":"rename(java.lang.String,java.lang.String)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation","l":"render()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"replaceAll(Expression, Expression, Expression)","url":"replaceAll(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ReplaceExpression","l":"ReplaceExpression(String, Expression, Expression, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"replacement(Expression)","url":"replacement(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"replaceOne(Expression, Expression, Expression)","url":"replaceOne(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"ReplaceRoot()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"ReplaceRoot(Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"replaceRoot(ReplaceRoot)","url":"replaceRoot(dev.morphia.aggregation.experimental.stages.ReplaceRoot)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"replaceRoot(ReplaceRoot)","url":"replaceRoot(dev.morphia.aggregation.experimental.stages.ReplaceRoot)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ReplaceRootCodec","l":"ReplaceRootCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"ReplaceWith()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"ReplaceWith(Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"replaceWith(ReplaceWith)","url":"replaceWith(dev.morphia.aggregation.experimental.stages.ReplaceWith)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"replaceWith(ReplaceWith)","url":"replaceWith(dev.morphia.aggregation.experimental.stages.ReplaceWith)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"ReplaceWithCodec","l":"ReplaceWithCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec.reader","c":"Mark","l":"reset()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"resolve()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"restrict(Filter...)","url":"restrict(dev.morphia.query.experimental.filters.Filter...)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"retrieveKnownFields()"},{"p":"dev.morphia.query","c":"Query","l":"retrieveKnownFields()"},{"p":"dev.morphia","c":"ModifyOptions","l":"returnDocument(ReturnDocument)","url":"returnDocument(com.mongodb.client.model.ReturnDocument)"},{"p":"dev.morphia.query","c":"FindOptions","l":"returnKey(boolean)"},{"p":"dev.morphia","c":"FindAndModifyOptions","l":"returnNew(boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"reverseArray(Expression)","url":"reverseArray(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SystemVariables","l":"ROOT"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"round(Expression, Expression)","url":"round(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"rtrim(Expression)","url":"rtrim(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"sample(int)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"sample(int)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"sample(long)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"sample(long)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sample","l":"Sample(long)","url":"%3Cinit%3E(long)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SampleCodec","l":"SampleCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia","c":"Datastore","l":"save(Iterable<T>, InsertOptions)","url":"save(java.lang.Iterable,dev.morphia.InsertOptions)"},{"p":"dev.morphia","c":"Datastore","l":"save(Iterable<T>)","url":"save(java.lang.Iterable)"},{"p":"dev.morphia","c":"Datastore","l":"save(List<T>, InsertManyOptions)","url":"save(java.util.List,dev.morphia.InsertManyOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"save(List<T>, InsertManyOptions)","url":"save(java.util.List,dev.morphia.InsertManyOptions)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"save(List<T>, InsertManyOptions)","url":"save(java.util.List,dev.morphia.InsertManyOptions)"},{"p":"dev.morphia","c":"Datastore","l":"save(List<T>)","url":"save(java.util.List)"},{"p":"dev.morphia","c":"Datastore","l":"save(T, InsertOneOptions)","url":"save(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"save(T, InsertOneOptions)","url":"save(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia.experimental","c":"MorphiaSessionImpl","l":"save(T, InsertOneOptions)","url":"save(T,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia","c":"Datastore","l":"save(T, InsertOptions)","url":"save(T,dev.morphia.InsertOptions)"},{"p":"dev.morphia","c":"Datastore","l":"save(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"save(T)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"saveDocument(T, MongoCollection<T>, InsertOneOptions)","url":"saveDocument(T,com.mongodb.client.MongoCollection,dev.morphia.InsertOneOptions)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"scale(Integer)","url":"scale(java.lang.Integer)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"search(String, String)","url":"search(java.lang.String,java.lang.String)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"search(String, String)","url":"search(java.lang.String,java.lang.String)"},{"p":"dev.morphia.query","c":"Query","l":"search(String, String)","url":"search(java.lang.String,java.lang.String)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"search(String)","url":"search(java.lang.String)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"search(String)","url":"search(java.lang.String)"},{"p":"dev.morphia.query","c":"Query","l":"search(String)","url":"search(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"second(Expression)","url":"second(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"second(Expression)","url":"second(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"second(int)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"serialization()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"serialization(PropertySerialization<? super Object>)","url":"serialization(org.bson.codecs.pojo.PropertySerialization)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"set(AddFields)","url":"set(dev.morphia.aggregation.experimental.stages.AddFields)"},{"p":"dev.morphia.mapping","c":"NoArgCreator","l":"set(Object, FieldModel)","url":"set(java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.codec","c":"InstanceCreator","l":"set(Object, FieldModel)","url":"set(java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.experimental","c":"ConstructorCreator","l":"set(Object, FieldModel)","url":"set(java.lang.Object,dev.morphia.mapping.codec.pojo.FieldModel)"},{"p":"dev.morphia.mapping.codec","c":"ArrayFieldAccessor","l":"set(Object, Object)","url":"set(java.lang.Object,java.lang.Object)"},{"p":"dev.morphia.mapping.codec","c":"FieldAccessor","l":"set(Object, Object)","url":"set(java.lang.Object,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"set(Object)","url":"set(java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"set(Object)","url":"set(java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"set(String, Object)","url":"set(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"set(String, Object)","url":"set(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"set(String, Object)","url":"set(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"set(String, Object)","url":"set(java.lang.String,java.lang.Object)"},{"p":"dev.morphia","c":"Key","l":"setCollection(String)","url":"setCollection(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"setDifference(Expression, Expression)","url":"setDifference(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setDistanceMultiplier(Double)","url":"setDistanceMultiplier(java.lang.Double)"},{"p":"dev.morphia.query.experimental.updates","c":"SetEntityOperator","l":"SetEntityOperator(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"setEquals(Expression, Expression...)","url":"setEquals(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setIncludeLocations(String)","url":"setIncludeLocations(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"setIntersection(Expression, Expression...)","url":"setIntersection(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"setIsSubset(Expression, Expression)","url":"setIsSubset(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setLimit(Long)","url":"setLimit(java.lang.Long)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setMaxDistance(Double)","url":"setMaxDistance(java.lang.Double)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setMaxDocuments(Long)","url":"setMaxDocuments(java.lang.Long)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setNear(double, double)","url":"setNear(double,double)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setNear(Point)","url":"setNear(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setNear(Point)","url":"setNear(dev.morphia.geo.Point)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"setOnInsert(Map<String, Object>)","url":"setOnInsert(java.util.Map)"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"setOnInsert(String, Object)","url":"setOnInsert(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"setOnInsert(String, Object)","url":"setOnInsert(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"Updates","l":"setOnInsert(String, Object)","url":"setOnInsert(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"SetOnInsertOperator","l":"SetOnInsertOperator(Map<String, Object>)","url":"%3Cinit%3E(java.util.Map)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"setOps(Document)","url":"setOps(org.bson.Document)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"setOptions(MapperOptions)","url":"setOptions(dev.morphia.mapping.MapperOptions)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"setPinnedServerAddress(ServerAddress)","url":"setPinnedServerAddress(com.mongodb.ServerAddress)"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"setQuery(LegacyQuery<?>)","url":"setQuery(dev.morphia.query.LegacyQuery)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setQuery(Query)","url":"setQuery(dev.morphia.query.Query)"},{"p":"dev.morphia","c":"Datastore","l":"setQueryFactory(QueryFactory)","url":"setQueryFactory(dev.morphia.query.QueryFactory)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"setQueryFactory(QueryFactory)","url":"setQueryFactory(dev.morphia.query.QueryFactory)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"setQueryObject(Document)","url":"setQueryObject(org.bson.Document)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"setRecoveryToken(BsonDocument)","url":"setRecoveryToken(org.bson.BsonDocument)"},{"p":"dev.morphia.mapping.experimental","c":"SetReference","l":"SetReference(Datastore, EntityModel, List)","url":"%3Cinit%3E(dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModel,java.util.List)"},{"p":"dev.morphia.mapping.experimental","c":"SetReference","l":"SetReference(Set<T>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"dev.morphia.aggregation","c":"GeoNear.GeoNearBuilder","l":"setSpherical(Boolean)","url":"setSpherical(java.lang.Boolean)"},{"p":"dev.morphia","c":"Key","l":"setType(Class<? extends T>)","url":"setType(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"SetExpressions","l":"setUnion(Expression, Expression...)","url":"setUnion(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"setValue(Object, Object)","url":"setValue(java.lang.Object,java.lang.Object)"},{"p":"dev.morphia.mapping.experimental","c":"ListReference","l":"setValues(List)","url":"setValues(java.util.List)"},{"p":"dev.morphia.mapping.experimental","c":"SetReference","l":"setValues(List)","url":"setValues(java.util.List)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"SEVERE"},{"p":"dev.morphia.mapping.codec","c":"MorphiaPropertySerialization","l":"shouldSerialize(Object)","url":"shouldSerialize(java.lang.Object)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"shouldSerialize(Object)","url":"shouldSerialize(java.lang.Object)"},{"p":"dev.morphia.query","c":"FindOptions","l":"showRecordId(boolean)"},{"p":"dev.morphia.mapping","c":"DiscriminatorFunction","l":"simpleName()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"sin(Expression)","url":"sin(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Push","l":"single(Expression)","url":"single(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.experimental","c":"SingleReference","l":"SingleReference(Datastore, EntityModel, Object)","url":"%3Cinit%3E(dev.morphia.Datastore,dev.morphia.mapping.codec.pojo.EntityModel,java.lang.Object)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"SIZE"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Fields","l":"size()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"size(Expression)","url":"size(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"size(Object)","url":"size(java.lang.Object)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"size(String, int)","url":"size(java.lang.String,int)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"sizeEq(int)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"sizeEq(int)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"skip(int)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"skip(int)"},{"p":"dev.morphia.query","c":"CountOptions","l":"skip(int)"},{"p":"dev.morphia.query","c":"FindOptions","l":"skip(int)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"skip(long)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"skip(long)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Skip","l":"Skip(long)","url":"%3Cinit%3E(long)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SkipCodec","l":"SkipCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"skipName()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"skipValue()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"slice(Expression, int)","url":"slice(dev.morphia.aggregation.experimental.expressions.impls.Expression,int)"},{"p":"dev.morphia.query","c":"PushOptions","l":"slice(int)"},{"p":"dev.morphia.query.experimental.updates","c":"PushOperator","l":"slice(int)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SliceExpression","l":"SliceExpression(Expression, int)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression,int)"},{"p":"dev.morphia.mapping","c":"NamingStrategy","l":"snakeCase()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort","l":"Sort()","url":"%3Cinit%3E()"},{"p":"dev.morphia","c":"ModifyOptions","l":"sort(Bson)","url":"sort(org.bson.conversions.Bson)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"sort(Bson)","url":"sort(org.bson.conversions.Bson)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"sort(Document)","url":"sort(org.bson.Document)"},{"p":"dev.morphia.query","c":"FindOptions","l":"sort(Document)","url":"sort(org.bson.Document)"},{"p":"dev.morphia.query","c":"PushOptions","l":"sort(int)"},{"p":"dev.morphia.query.experimental.updates","c":"PushOperator","l":"sort(int)"},{"p":"dev.morphia.query","c":"FindOptions","l":"sort(Meta)","url":"sort(dev.morphia.query.Meta)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"sort(Sort...)","url":"sort(dev.morphia.query.Sort...)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"sort(Sort...)","url":"sort(dev.morphia.query.Sort...)"},{"p":"dev.morphia.query","c":"FindOptions","l":"sort(Sort...)","url":"sort(dev.morphia.query.Sort...)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"sort(Sort)","url":"sort(dev.morphia.aggregation.experimental.stages.Sort)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"sort(Sort)","url":"sort(dev.morphia.aggregation.experimental.stages.Sort)"},{"p":"dev.morphia.query.experimental.updates","c":"PushOperator","l":"sort(Sort)","url":"sort(dev.morphia.query.Sort)"},{"p":"dev.morphia.query","c":"PushOptions","l":"sort(String, int)","url":"sort(java.lang.String,int)"},{"p":"dev.morphia.query","c":"Sort","l":"Sort(String, int)","url":"%3Cinit%3E(java.lang.String,int)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"sortByCount(Expression)","url":"sortByCount(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"sortByCount(Expression)","url":"sortByCount(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"SortByCount","l":"SortByCount(Expression)","url":"%3Cinit%3E(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"sortByCount(String)","url":"sortByCount(java.lang.String)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"sortByCount(String)","url":"sortByCount(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SortByCountCodec","l":"SortByCountCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"SortCodec","l":"SortCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.SortType","l":"SortType(String, Sort.Direction)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.stages.Sort.Direction)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"sparse()"},{"p":"dev.morphia.query.experimental.filters","c":"RegexFilter","l":"special()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"spherical(Boolean)","url":"spherical(java.lang.Boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"split(Expression, Expression)","url":"split(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"sqrt(Expression)","url":"sqrt(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Stage","l":"Stage(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"StageCodec","l":"StageCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IndexExpression","l":"start(int)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ArrayIndexExpression","l":"start(Integer)","url":"start(java.lang.Integer)"},{"p":"dev.morphia","c":"Datastore","l":"startSession()"},{"p":"dev.morphia","c":"DatastoreImpl","l":"startSession()"},{"p":"dev.morphia","c":"Datastore","l":"startSession(ClientSessionOptions)","url":"startSession(com.mongodb.ClientSessionOptions)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"startSession(ClientSessionOptions)","url":"startSession(com.mongodb.ClientSessionOptions)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"startsWith(String)","url":"startsWith(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"startsWith(String)","url":"startsWith(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"startsWithIgnoreCase(String)","url":"startsWithIgnoreCase(java.lang.String)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"startsWithIgnoreCase(String)","url":"startsWithIgnoreCase(java.lang.String)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"startTransaction()"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"startTransaction(TransactionOptions)","url":"startTransaction(com.mongodb.TransactionOptions)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GraphLookup","l":"startWith(Expression)","url":"startWith(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"stdDevPop(Expression, Expression...)","url":"stdDevPop(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"stdDevSamp(Expression, Expression...)","url":"stdDevSamp(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"RangeExpression","l":"step(Integer)","url":"step(java.lang.Integer)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"storeEmpties(boolean)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"storeNulls(boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"strcasecmp(Expression, Expression)","url":"strcasecmp(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"Collation","l":"strength()"},{"p":"dev.morphia.annotations","c":"CollationBuilder","l":"strength()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"STRING"},{"p":"dev.morphia.query","c":"Type","l":"STRING"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"strLenBytes(Expression)","url":"strLenBytes(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"strLenCP(Expression)","url":"strLenCP(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"substr(Expression, int, int)","url":"substr(dev.morphia.aggregation.experimental.expressions.impls.Expression,int,int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"substrBytes(Expression, int, int)","url":"substrBytes(dev.morphia.aggregation.experimental.expressions.impls.Expression,int,int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"substrCP(Expression, int, int)","url":"substrCP(dev.morphia.aggregation.experimental.expressions.impls.Expression,int,int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"subtract(Expression, Expression)","url":"subtract(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Projection","l":"subtract(Object, Object)","url":"subtract(java.lang.Object,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"AccumulatorExpressions","l":"sum(Expression, Expression...)","url":"sum(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.OutputOperation","l":"sum(Object)","url":"sum(java.lang.Object)"},{"p":"dev.morphia.query","c":"BucketOptions.OutputOperation","l":"sum(Object)","url":"sum(java.lang.Object)"},{"p":"dev.morphia.aggregation","c":"Group","l":"sum(String)","url":"sum(java.lang.String)"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModelBuilder","l":"superclass()"},{"p":"dev.morphia.aggregation","c":"Projection","l":"suppress()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Projection","l":"suppressId()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ConditionalExpressions","l":"switchExpression()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"SwitchExpression","l":"SwitchExpression()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"Type","l":"SYMBOL"},{"p":"dev.morphia.mapping","c":"DateStorage","l":"SYSTEM_DEFAULT"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TrigonometryExpressions","l":"tan(Expression)","url":"tan(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IfNull","l":"target(Expression)","url":"target(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"text(String)","url":"text(java.lang.String)"},{"p":"dev.morphia.annotations","c":"TextBuilder","l":"TextBuilder()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"Meta.MetaDataKeyword","l":"textScore"},{"p":"dev.morphia.query","c":"Meta","l":"textScore()"},{"p":"dev.morphia.query","c":"Meta","l":"textScore(String)","url":"textScore(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"TextSearchFilter","l":"TextSearchFilter(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.query","c":"Type","l":"TIMESTAMP"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator.TypeSpecification","l":"TIMESTAMP"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"timezone(Expression)","url":"timezone(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToParts","l":"timezone(Expression)","url":"timezone(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"IsoDates","l":"timezone(Expression)","url":"timezone(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"timeZone(Expression)","url":"timeZone(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"timeZone(Expression)","url":"timeZone(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"timezone(String)","url":"timezone(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromString","l":"timeZone(String)","url":"timeZone(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateToString","l":"timeZone(String)","url":"timeZone(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Out","l":"to(Class<O>)","url":"to(java.lang.Class)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"to(double[])"},{"p":"dev.morphia.aggregation.experimental.stages","c":"GeoNear","l":"to(Point)","url":"to(com.mongodb.client.model.geojson.Point)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Out","l":"to(String)","url":"to(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toBool(Expression)","url":"toBool(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia","c":"UpdateDocument","l":"toBsonDocument(Class<TDocument>, CodecRegistry)","url":"toBsonDocument(java.lang.Class,org.bson.codecs.configuration.CodecRegistry)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"toDate(Expression)","url":"toDate(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toDate(Expression)","url":"toDate(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toDecimal(Expression)","url":"toDecimal(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation","c":"Accumulator","l":"toDocument()"},{"p":"dev.morphia.query","c":"BucketAutoOptions","l":"toDocument()"},{"p":"dev.morphia.query","c":"BucketOptions","l":"toDocument()"},{"p":"dev.morphia.query","c":"Criteria","l":"toDocument()"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"toDocument()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"toDocument()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"toDocument()"},{"p":"dev.morphia.query","c":"Query","l":"toDocument()"},{"p":"dev.morphia.query","c":"UpdateBase","l":"toDocument()"},{"p":"dev.morphia.query","c":"WhereCriteria","l":"toDocument()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"toDocument(Object)","url":"toDocument(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toDouble(Expression)","url":"toDouble(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toInt(Expression)","url":"toInt(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"Expressions","l":"toList(T, T...)","url":"toList(T,T...)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toLong(Expression)","url":"toLong(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"toLower(Expression)","url":"toLower(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toObjectId(Expression)","url":"toObjectId(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia","c":"Key","l":"toString()"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"toString()"},{"p":"dev.morphia.aggregation","c":"Projection","l":"toString()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"Expression","l":"toString()"},{"p":"dev.morphia.annotations","c":"AnnotationBuilder","l":"toString()"},{"p":"dev.morphia.geo","c":"GeometryCollection","l":"toString()"},{"p":"dev.morphia.geo","c":"LineString","l":"toString()"},{"p":"dev.morphia.geo","c":"MultiLineString","l":"toString()"},{"p":"dev.morphia.geo","c":"MultiPoint","l":"toString()"},{"p":"dev.morphia.geo","c":"MultiPolygon","l":"toString()"},{"p":"dev.morphia.geo","c":"NamedCoordinateReferenceSystem","l":"toString()"},{"p":"dev.morphia.geo","c":"Point","l":"toString()"},{"p":"dev.morphia.geo","c":"Polygon","l":"toString()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"toString()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"toString()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModel","l":"toString()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"toString()"},{"p":"dev.morphia.mapping.codec.pojo","c":"TypeData","l":"toString()"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"toString()"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"toString()"},{"p":"dev.morphia.mapping.validation.classrules","c":"FieldEnumString","l":"toString()"},{"p":"dev.morphia.query","c":"CriteriaContainerImpl","l":"toString()"},{"p":"dev.morphia.query","c":"CriteriaJoin","l":"toString()"},{"p":"dev.morphia.query","c":"FindOptions","l":"toString()"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"toString()"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"toString()"},{"p":"dev.morphia.query","c":"OperationTarget","l":"toString()"},{"p":"dev.morphia.query","c":"UpdateBase","l":"toString()"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"toString()"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"toString(Expression)","url":"toString(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"toString(Expression)","url":"toString(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.updates","c":"AddToSetOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"PullOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"PushOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"SetEntityOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"SetOnInsertOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"UnsetOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"toTarget(PathTarget)","url":"toTarget(dev.morphia.internal.PathTarget)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"toUpper(Expression)","url":"toUpper(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"StringExpressions","l":"trim(Expression)","url":"trim(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"TrimExpression","l":"TrimExpression(String, Expression)","url":"%3Cinit%3E(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"MathExpressions","l":"trunc(Expression, Expression)","url":"trunc(dev.morphia.aggregation.experimental.expressions.impls.Expression,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"TYPE"},{"p":"dev.morphia.annotations","c":"Field","l":"type()"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator","l":"type(CurrentDateOperator.TypeSpecification)","url":"type(dev.morphia.query.experimental.updates.CurrentDateOperator.TypeSpecification)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"type(Expression)","url":"type(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"type(String, Type)","url":"type(java.lang.String,dev.morphia.query.Type)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"type(Type)","url":"type(dev.morphia.query.Type)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"type(Type)","url":"type(dev.morphia.query.Type)"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"typeData()"},{"p":"dev.morphia.mapping.codec.pojo","c":"FieldModelBuilder","l":"typeData(TypeData<?>)","url":"typeData(dev.morphia.mapping.codec.pojo.TypeData)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"TypeExpressions","l":"TypeExpressions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"Type","l":"UNDEFINED"},{"p":"dev.morphia.aggregation.experimental.stages","c":"UnionWith","l":"UnionWith(Class<?>, List<Stage>)","url":"%3Cinit%3E(java.lang.Class,java.util.List)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"unionWith(Class<?>, Stage, Stage...)","url":"unionWith(java.lang.Class,dev.morphia.aggregation.experimental.stages.Stage,dev.morphia.aggregation.experimental.stages.Stage...)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"unionWith(Class<?>, Stage, Stage...)","url":"unionWith(java.lang.Class,dev.morphia.aggregation.experimental.stages.Stage,dev.morphia.aggregation.experimental.stages.Stage...)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"UnionWith","l":"UnionWith(String, List<Stage>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"unionWith(String, Stage, Stage...)","url":"unionWith(java.lang.String,dev.morphia.aggregation.experimental.stages.Stage,dev.morphia.aggregation.experimental.stages.Stage...)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"unionWith(String, Stage, Stage...)","url":"unionWith(java.lang.String,dev.morphia.aggregation.experimental.stages.Stage,dev.morphia.aggregation.experimental.stages.Stage...)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnionWithCodec","l":"UnionWithCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.annotations","c":"IndexOptions","l":"unique()"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"uniqueDocs(String, Object)","url":"uniqueDocs(java.lang.String,java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unset","l":"Unset()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"UpdateOperations","l":"unset(String)","url":"unset(java.lang.String)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"unset(String)","url":"unset(java.lang.String)"},{"p":"dev.morphia.query","c":"Updates","l":"unset(String)","url":"unset(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"unset(String)","url":"unset(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"unset(Unset)","url":"unset(dev.morphia.aggregation.experimental.stages.Unset)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"unset(Unset)","url":"unset(dev.morphia.aggregation.experimental.stages.Unset)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnsetCodec","l":"UnsetCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.query.experimental.updates","c":"UnsetOperator","l":"UnsetOperator(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Unwind","l":"Unwind()","url":"%3Cinit%3E()"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"unwind(String, UnwindOptions)","url":"unwind(java.lang.String,com.mongodb.client.model.UnwindOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"unwind(String, UnwindOptions)","url":"unwind(java.lang.String,com.mongodb.client.model.UnwindOptions)"},{"p":"dev.morphia.aggregation","c":"AggregationPipeline","l":"unwind(String)","url":"unwind(java.lang.String)"},{"p":"dev.morphia.aggregation","c":"AggregationPipelineImpl","l":"unwind(String)","url":"unwind(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental","c":"Aggregation","l":"unwind(Unwind)","url":"unwind(dev.morphia.aggregation.experimental.stages.Unwind)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationImpl","l":"unwind(Unwind)","url":"unwind(dev.morphia.aggregation.experimental.stages.Unwind)"},{"p":"dev.morphia.aggregation.experimental.codecs.stages","c":"UnwindCodec","l":"UnwindCodec(Mapper)","url":"%3Cinit%3E(dev.morphia.mapping.Mapper)"},{"p":"dev.morphia.mapping.codec.references","c":"MorphiaProxy","l":"unwrap()"},{"p":"dev.morphia.mapping.codec.references","c":"ReferenceProxy","l":"unwrap()"},{"p":"dev.morphia","c":"Datastore","l":"update(Query<T>, UpdateOperations<T>, UpdateOptions)","url":"update(dev.morphia.query.Query,dev.morphia.query.UpdateOperations,dev.morphia.UpdateOptions)"},{"p":"dev.morphia","c":"Datastore","l":"update(Query<T>, UpdateOperations<T>)","url":"update(dev.morphia.query.Query,dev.morphia.query.UpdateOperations)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"update(UpdateOperations<T>)","url":"update(dev.morphia.query.UpdateOperations)"},{"p":"dev.morphia.query","c":"Query","l":"update(UpdateOperations<T>)","url":"update(dev.morphia.query.UpdateOperations)"},{"p":"dev.morphia.query","c":"LegacyQuery","l":"update(UpdateOperator, UpdateOperator...)","url":"update(dev.morphia.query.experimental.updates.UpdateOperator,dev.morphia.query.experimental.updates.UpdateOperator...)"},{"p":"dev.morphia.query","c":"MorphiaQuery","l":"update(UpdateOperator, UpdateOperator...)","url":"update(dev.morphia.query.experimental.updates.UpdateOperator,dev.morphia.query.experimental.updates.UpdateOperator...)"},{"p":"dev.morphia.query","c":"Query","l":"update(UpdateOperator, UpdateOperator...)","url":"update(dev.morphia.query.experimental.updates.UpdateOperator,dev.morphia.query.experimental.updates.UpdateOperator...)"},{"p":"dev.morphia.mapping","c":"Mapper","l":"updateCollection(Key)","url":"updateCollection(dev.morphia.Key)"},{"p":"dev.morphia","c":"UpdateDocument","l":"UpdateDocument(T)","url":"%3Cinit%3E(T)"},{"p":"dev.morphia.query","c":"UpdateException","l":"UpdateException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"dev.morphia.query","c":"UpdateException","l":"UpdateException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"UpdateOperator(String, String, List<?>)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.List)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"UpdateOperator(String, String, Object)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"dev.morphia.query","c":"UpdateOpsImpl","l":"UpdateOpsImpl(Datastore, Class<T>, Mapper)","url":"%3Cinit%3E(dev.morphia.Datastore,java.lang.Class,dev.morphia.mapping.Mapper)"},{"p":"dev.morphia","c":"UpdateOptions","l":"UpdateOptions()","url":"%3Cinit%3E()"},{"p":"dev.morphia.mapping","c":"Mapper","l":"updateQueryWithDiscriminators(EntityModel, Document)","url":"updateQueryWithDiscriminators(dev.morphia.mapping.codec.pojo.EntityModel,org.bson.Document)"},{"p":"dev.morphia","c":"ModifyOptions","l":"upsert(boolean)"},{"p":"dev.morphia","c":"UpdateOptions","l":"upsert(boolean)"},{"p":"dev.morphia.mapping.codec","c":"URICodec","l":"URICodec()","url":"%3Cinit%3E()"},{"p":"dev.morphia.annotations","c":"Embedded","l":"useDiscriminator()"},{"p":"dev.morphia.annotations","c":"Entity","l":"useDiscriminator()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"useDiscriminator()"},{"p":"dev.morphia.mapping.codec.pojo","c":"EntityModel","l":"useDiscriminator()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"useDiscriminator(boolean)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ZipExpression","l":"useLongestLength(Boolean)","url":"useLongestLength(java.lang.Boolean)"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"useLowerCaseCollectionNames(boolean)"},{"p":"dev.morphia.mapping","c":"DateStorage","l":"UTC"},{"p":"dev.morphia.mapping","c":"MapperOptions.Builder","l":"uuidRepresentation(UuidRepresentation)","url":"uuidRepresentation(org.bson.UuidRepresentation)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"val()"},{"p":"dev.morphia.query","c":"Type","l":"val()"},{"p":"dev.morphia.mapping.validation","c":"MappingValidator","l":"validate(Mapper, EntityModel)","url":"validate(dev.morphia.mapping.Mapper,dev.morphia.mapping.codec.pojo.EntityModel)"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"ValidationBuilder()","url":"%3Cinit%3E()"},{"p":"dev.morphia.query","c":"ValidationException","l":"ValidationException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"dev.morphia.query","c":"ValidationException","l":"ValidationException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.annotations","c":"AlsoLoad","l":"value()"},{"p":"dev.morphia.annotations","c":"CappedAt","l":"value()"},{"p":"dev.morphia.annotations","c":"Converters","l":"value()"},{"p":"dev.morphia.annotations","c":"Embedded","l":"value()"},{"p":"dev.morphia.annotations","c":"Entity","l":"value()"},{"p":"dev.morphia.annotations","c":"EntityListeners","l":"value()"},{"p":"dev.morphia.annotations","c":"Field","l":"value()"},{"p":"dev.morphia.annotations","c":"Handler","l":"value()"},{"p":"dev.morphia.annotations","c":"Indexed","l":"value()"},{"p":"dev.morphia.annotations","c":"Indexes","l":"value()"},{"p":"dev.morphia.annotations","c":"Property","l":"value()"},{"p":"dev.morphia.annotations","c":"Reference","l":"value()"},{"p":"dev.morphia.annotations","c":"Text","l":"value()"},{"p":"dev.morphia.annotations","c":"TextBuilder","l":"value()"},{"p":"dev.morphia.annotations","c":"Validation","l":"value()"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"value()"},{"p":"dev.morphia.annotations","c":"Version","l":"value()"},{"p":"dev.morphia.annotations.experimental","c":"EmbeddedBuilder","l":"value()"},{"p":"dev.morphia.annotations.experimental","c":"IdField","l":"value()"},{"p":"dev.morphia.annotations.experimental","c":"Name","l":"value()"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"value()"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"value(Mapper, BsonWriter, Object, EncoderContext)","url":"value(dev.morphia.mapping.Mapper,org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.codecs","c":"ExpressionHelper","l":"value(Mapper, BsonWriter, String, Object, EncoderContext)","url":"value(dev.morphia.mapping.Mapper,org.bson.BsonWriter,java.lang.String,java.lang.Object,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"Expressions","l":"value(Object)","url":"value(java.lang.Object)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperator","l":"value(Object)","url":"value(java.lang.Object)"},{"p":"dev.morphia.annotations","c":"ValidationBuilder","l":"value(String)","url":"value(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ValueExpression","l":"ValueExpression(Object)","url":"%3Cinit%3E(java.lang.Object)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.Direction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystemType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.mapping","c":"DateStorage","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.query","c":"CriteriaJoin","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.query","c":"Meta.MetaDataKeyword","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.query","c":"Type","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator.TypeSpecification","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ConvertType","l":"values()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Sort.Direction","l":"values()"},{"p":"dev.morphia.geo","c":"CoordinateReferenceSystemType","l":"values()"},{"p":"dev.morphia.geo","c":"GeoJsonType","l":"values()"},{"p":"dev.morphia.mapping","c":"DateStorage","l":"values()"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"values()"},{"p":"dev.morphia.query","c":"BucketAutoOptions.Granularity","l":"values()"},{"p":"dev.morphia.query","c":"CriteriaJoin","l":"values()"},{"p":"dev.morphia.query","c":"FilterOperator","l":"values()"},{"p":"dev.morphia.query","c":"Meta.MetaDataKeyword","l":"values()"},{"p":"dev.morphia.query","c":"Type","l":"values()"},{"p":"dev.morphia.query.experimental.updates","c":"CurrentDateOperator.TypeSpecification","l":"values()"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"LetExpression","l":"variable(String, Expression)","url":"variable(java.lang.String,dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.mapping.codec.reader","c":"DocumentReader","l":"verifyName(String)","url":"verifyName(java.lang.String)"},{"p":"dev.morphia.mapping.validation.fieldrules","c":"VersionMisuse","l":"VersionMisuse(MorphiaInstanceCreator)","url":"%3Cinit%3E(dev.morphia.mapping.codec.MorphiaInstanceCreator)"},{"p":"dev.morphia.mapping.validation","c":"ConstraintViolation.Level","l":"WARNING"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"week(Expression)","url":"week(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.annotations","c":"Field","l":"weight()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"whenMatched(List<Stage>)","url":"whenMatched(java.util.List)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"whenMatched(MergeOptions.WhenMatched)","url":"whenMatched(com.mongodb.client.model.MergeOptions.WhenMatched)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"Merge","l":"whenNotMatched(MergeOptions.WhenNotMatched)","url":"whenNotMatched(com.mongodb.client.model.MergeOptions.WhenNotMatched)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"WHERE"},{"p":"dev.morphia.query.experimental.filters","c":"Filters","l":"where(String)","url":"where(java.lang.String)"},{"p":"dev.morphia.query","c":"WhereCriteria","l":"WhereCriteria(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"CollectionStats","l":"with()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"with()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"with()"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceRoot","l":"with(Expression)","url":"with(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.stages","c":"ReplaceWith","l":"with(Expression)","url":"with(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.query","c":"FilterOperator","l":"WITHIN_BOX"},{"p":"dev.morphia.query","c":"FilterOperator","l":"WITHIN_CIRCLE"},{"p":"dev.morphia.query","c":"FilterOperator","l":"WITHIN_CIRCLE_SPHERE"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(MultiPolygon, CoordinateReferenceSystem)","url":"within(com.mongodb.client.model.geojson.MultiPolygon,com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(MultiPolygon, CoordinateReferenceSystem)","url":"within(dev.morphia.geo.MultiPolygon,dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"within(MultiPolygon, CoordinateReferenceSystem)","url":"within(com.mongodb.client.model.geojson.MultiPolygon,com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(MultiPolygon)","url":"within(com.mongodb.client.model.geojson.MultiPolygon)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(MultiPolygon)","url":"within(dev.morphia.geo.MultiPolygon)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"within(MultiPolygon)","url":"within(com.mongodb.client.model.geojson.MultiPolygon)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(Polygon, CoordinateReferenceSystem)","url":"within(com.mongodb.client.model.geojson.Polygon,com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(Polygon, CoordinateReferenceSystem)","url":"within(dev.morphia.geo.Polygon,dev.morphia.geo.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"within(Polygon, CoordinateReferenceSystem)","url":"within(com.mongodb.client.model.geojson.Polygon,com.mongodb.client.model.geojson.CoordinateReferenceSystem)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(Polygon)","url":"within(com.mongodb.client.model.geojson.Polygon)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(Polygon)","url":"within(dev.morphia.geo.Polygon)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"within(Polygon)","url":"within(com.mongodb.client.model.geojson.Polygon)"},{"p":"dev.morphia.query","c":"FieldEnd","l":"within(Shape)","url":"within(dev.morphia.query.Shape)"},{"p":"dev.morphia.query","c":"FieldEndImpl","l":"within(Shape)","url":"within(dev.morphia.query.Shape)"},{"p":"dev.morphia","c":"Datastore","l":"withTransaction(ClientSessionOptions, MorphiaTransaction<T>)","url":"withTransaction(com.mongodb.ClientSessionOptions,dev.morphia.transactions.experimental.MorphiaTransaction)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"withTransaction(ClientSessionOptions, MorphiaTransaction<T>)","url":"withTransaction(com.mongodb.ClientSessionOptions,dev.morphia.transactions.experimental.MorphiaTransaction)"},{"p":"dev.morphia","c":"Datastore","l":"withTransaction(MorphiaTransaction<T>)","url":"withTransaction(dev.morphia.transactions.experimental.MorphiaTransaction)"},{"p":"dev.morphia","c":"DatastoreImpl","l":"withTransaction(MorphiaTransaction<T>)","url":"withTransaction(dev.morphia.transactions.experimental.MorphiaTransaction)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"withTransaction(TransactionBody<T>, TransactionOptions)","url":"withTransaction(com.mongodb.client.TransactionBody,com.mongodb.TransactionOptions)"},{"p":"dev.morphia.experimental","c":"BaseMorphiaSession","l":"withTransaction(TransactionBody<T>)","url":"withTransaction(com.mongodb.client.TransactionBody)"},{"p":"dev.morphia.mapping.experimental","c":"MorphiaReference","l":"wrap(V)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeBinaryData(BsonBinary)","url":"writeBinaryData(org.bson.BsonBinary)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeBinaryData(String, BsonBinary)","url":"writeBinaryData(java.lang.String,org.bson.BsonBinary)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeBoolean(boolean)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeBoolean(String, boolean)","url":"writeBoolean(java.lang.String,boolean)"},{"p":"dev.morphia","c":"DeleteOptions","l":"writeConcern()"},{"p":"dev.morphia","c":"InsertManyOptions","l":"writeConcern()"},{"p":"dev.morphia","c":"InsertOneOptions","l":"writeConcern()"},{"p":"dev.morphia","c":"ModifyOptions","l":"writeConcern()"},{"p":"dev.morphia","c":"UpdateOptions","l":"writeConcern()"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"writeConcern()"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"writeConcern()"},{"p":"dev.morphia","c":"DeleteOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia","c":"InsertManyOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia","c":"InsertOneOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia","c":"InsertOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia","c":"ModifyOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia","c":"UpdateOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia.aggregation.experimental","c":"AggregationOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia.query","c":"FindAndDeleteOptions","l":"writeConcern(WriteConcern)","url":"writeConcern(com.mongodb.WriteConcern)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDateTime(long)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDateTime(String, long)","url":"writeDateTime(java.lang.String,long)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDBPointer(BsonDbPointer)","url":"writeDBPointer(org.bson.BsonDbPointer)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDBPointer(String, BsonDbPointer)","url":"writeDBPointer(java.lang.String,org.bson.BsonDbPointer)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDecimal128(Decimal128)","url":"writeDecimal128(org.bson.types.Decimal128)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDecimal128(String, Decimal128)","url":"writeDecimal128(java.lang.String,org.bson.types.Decimal128)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDouble(double)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeDouble(String, double)","url":"writeDouble(java.lang.String,double)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeEndArray()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeEndDocument()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeInt32(int)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeInt32(String, int)","url":"writeInt32(java.lang.String,int)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeInt64(long)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeInt64(String, long)","url":"writeInt64(java.lang.String,long)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeJavaScript(String, String)","url":"writeJavaScript(java.lang.String,java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeJavaScript(String)","url":"writeJavaScript(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeJavaScriptWithScope(String, String)","url":"writeJavaScriptWithScope(java.lang.String,java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeJavaScriptWithScope(String)","url":"writeJavaScriptWithScope(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeMaxKey()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeMaxKey(String)","url":"writeMaxKey(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeMinKey()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeMinKey(String)","url":"writeMinKey(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeName(String)","url":"writeName(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"writeNamedValue(String, Object, Mapper, BsonWriter, EncoderContext)","url":"writeNamedValue(java.lang.String,java.lang.Object,dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeNull()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeNull(String)","url":"writeNull(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeObjectId(ObjectId)","url":"writeObjectId(org.bson.types.ObjectId)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeObjectId(String, ObjectId)","url":"writeObjectId(java.lang.String,org.bson.types.ObjectId)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeRegularExpression(BsonRegularExpression)","url":"writeRegularExpression(org.bson.BsonRegularExpression)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeRegularExpression(String, BsonRegularExpression)","url":"writeRegularExpression(java.lang.String,org.bson.BsonRegularExpression)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeStartArray()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeStartArray(String)","url":"writeStartArray(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeStartDocument()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeStartDocument(String)","url":"writeStartDocument(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeString(String, String)","url":"writeString(java.lang.String,java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeString(String)","url":"writeString(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeSymbol(String, String)","url":"writeSymbol(java.lang.String,java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeSymbol(String)","url":"writeSymbol(java.lang.String)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeTimestamp(BsonTimestamp)","url":"writeTimestamp(org.bson.BsonTimestamp)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeTimestamp(String, BsonTimestamp)","url":"writeTimestamp(java.lang.String,org.bson.BsonTimestamp)"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeUndefined()"},{"p":"dev.morphia.mapping.codec","c":"DocumentWriter","l":"writeUndefined(String)","url":"writeUndefined(java.lang.String)"},{"p":"dev.morphia.query.experimental.filters","c":"Filter","l":"writeUnnamedValue(Object, Mapper, BsonWriter, EncoderContext)","url":"writeUnnamedValue(java.lang.Object,dev.morphia.mapping.Mapper,org.bson.BsonWriter,org.bson.codecs.EncoderContext)"},{"p":"dev.morphia.query.experimental.updates","c":"UpdateOperators","l":"xor(String, int)","url":"xor(java.lang.String,int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"DateExpressions","l":"year(Expression)","url":"year(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"year(Expression)","url":"year(dev.morphia.aggregation.experimental.expressions.impls.Expression)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"DateFromParts","l":"year(int)"},{"p":"dev.morphia.aggregation.experimental.expressions","c":"ArrayExpressions","l":"zip(Expression...)","url":"zip(dev.morphia.aggregation.experimental.expressions.impls.Expression...)"},{"p":"dev.morphia.aggregation.experimental.expressions.impls","c":"ZipExpression","l":"ZipExpression(List<Expression>)","url":"%3Cinit%3E(java.util.List)"}]